{"version":3,"sources":["IE.js","Loading.js","Header.js","PatientCard.js","Patient.js","Practitioner.js","Resource.js","FHIRClientWrapper.js","StateStorage.js","PatientSearch.js","WelcomePlain.js","WelcomeSmart.js","Welcome.js","StandalonePatientSearch.js","Completion.js","FormPage.js","PronounceForm.js","Timeline.js","CauseOfDeathForm.js","AdditionalQuestionsForm.js","InjuryQuestionsForm.js","FHIRExport.js","RecordAndPatientToFHIR.js","ReviewAndSubmit.js","App.js","registerServiceWorker.js","index.js"],"names":["require","Loading","props","Icon","className","name","loading","size","Header","Menu","color","inverted","attached","Item","header","position","PatientCard","patient","Card","fluid","Table","Body","Row","textAlign","Cell","Content","birthDate","age","race","ethnicity","gender","address","Patient","resource","this","id","resourceName","_","isArray","names","concat","given","family","suffix","join","trim","length","startDate","endDate","deceasedDateTime","Date","toISOString","moment","diff","format","identifier","ssn","find","iden","system","value","extension","ext","url","valueCodeableConcept","coding","display","birthPlace","valueAddress","birthPlaceCombined","city","state","replace","mothersMaidenName","valueString","deathDateTime","addr","line","district","postalCode","status","maritalStatus","code","Practitioner","formatDate","date","Resource","referencedResource","smart","reference","type","split","reverse","api","read","then","response","wrap","data","Promise","resolve","text","formattedStartDate","formattedEndDate","resourceType","Condition","Procedure","Observation","MedicationRequest","MedicationOrder","onsetDateTime","abatementDateTime","performedDateTime","performedPeriod","start","end","reasonReference","effectiveDateTime","valueQuantity","unit","medicationResource","medicationReference","description","medicationCodeableConcept","dateWritten","authoredOn","FHIR","window","smartReady","oauth2","ready","loadPatients","searchQuery","searchParams","query","search","entry","map","loadResources","patientId","promises","getResources","isUndefined","total","isNumber","resources","sortBy","error","withMedications","medicationRequests","all","medicationRequest","withEmbeddedResource","medicationOrders","medicationOrder","results","result","FHIRWrap","fhirServer","client","serviceUrl","SMARTWrap","settings","authorize","user","server","StateStorage","retrieveState","stateKey","defaultState","localState","localStorage","Object","assign","JSON","parse","storeState","stringify","PatientSearch","searchState","searching","handleChange","bind","handleFhirServerChange","handleSubmit","handlePatientClick","event","target","setState","pick","updateFhirServer","preventDefault","patients","handlePatientSelect","patientLink","key","onClick","fhirServerFormField","Form","Field","onChange","onSubmit","Button","primary","disabled","Loader","active","inline","content","Group","Component","defaultFhirServer","Welcome","conditions","medications","procedures","observations","setResources","setPatient","gotoStep","redirectURI","location","href","WelcomeSmart","clientId","secret","scope","client_id","redirect_uri","ReactDOM","render","document","getElementById","selectedMenuItem","handleMenuClick","pointing","WelcomePlain","StandalonePatientSearch","decedentName","Completion","register","field","step","optional","fields","union","isComplete","record","stepFields","relevantRecordFields","chain","values","filter","FormPage","input","radio","stepName","currentStep","showCompletion","Step","Title","menuItem","options","Input","width","label","labelPosition","handleRecordChange","TextArea","rows","checked","Radio","floated","PronounceForm","Fragment","Grid","menu","Column","widths","grouped","nextStepButton","Timeline","tab","searchString","gotoTab","handleSearchChange","newTab","resourceCards","prescriber","Meta","formattedDateRange","Description","additionalText","searchRegex","RegExp","resourceFilter","element","match","displayedConditions","displayedProcedures","displayedObservations","displayedMedications","tabular","icon","placeholder","condition","selected","selectedConditions","includes","handleConditionClick","renderTab","CauseOfDeathForm","deleteButton","textarea","AdditionalQuestionsForm","InjuryQuestionsForm","formatDateAndTime","time","utc","uuid","push","profile","meta","Bundle","Error","fullUrl","Composition","CodeableConcept","decedentEntry","subject","certifierEntry","asserter","Person","HumanName","Address","qualification","PractitionerRole","Organization","List","RelatedPerson","performer","locationEntry","valueReference","addExtension","typeOptions","valueOptions","component","Location","physicalType","use","DeathCertificateDocument","createAndAddEntry","DeathCertificate","deathCertificate","certificate","Decedent","decedent","addDecedentReference","Certifier","certifier","addPerformerReference","DeathCertification","deathCertification","deathCertificationEntry","addCertificationReference","DeathLocation","deathLocation","deathLocationEntry","Mortician","mortician","morticianEntry","DispositionLocation","dispositionLocation","dispositionLocationEntry","FuneralHome","funeralHome","funeralHomeEntry","DecedentFather","decedentFather","DecedentMother","decedentMother","DecedentSpouse","decedentSpouse","DecedentAge","decedentAge","DecedentPregnancy","decedentPregnancy","DecedentTransportationRole","decedentTransportationRole","TobaccoUseContributedToDeath","tobaccoUseContributedToDeath","DecedentEducationLevel","decedentEducationLevel","DecedentEmploymentHistory","decedentEmploymentHistory","BirthRecordIdentifier","birthRecordIdentifier","MannerOfDeath","mannerOfDeath","AutopsyPerformedIndicator","autopsyPerformed","ExaminerContacted","examinerContacted","InterestedParty","interestedParty","ConditionContributingToDeath","conditionContributingToDeath","DeathDate","deathDate","DeathPronouncementPerformer","deathPronouncementPerformer","InjuryIncident","injuryIncident","InjuryLocation","injuryLocation","DecedentDispositionMethod","decedentDispositionMethod","FuneralHomeDirector","funeralHomeDirector","addFuneralHomeReference","CauseOfDeathPathway","causeOfDeathPathway","causeOfDeathConditions","causeOptions","CauseOfDeathCondition","causeOfDeathConditionEntry","addCauseOfDeathReference","setProfile","klass","performerEntry","instance","addLocationReference","addEntry","addSectionEntry","attester","mode","party","certificationReference","detail","section","category","performedDate","performedTime","role","actor","raceEntries","castArray","raceText","e","raceEntry","valueCoding","birthSex","relationship","practitioner","organization","typeCode","typeDisplay","orderedBy","source","causeOfDeathEntry","item","interval","onsetString","valueBoolean","militaryService","addComponent","usualIndustry","usualOccupation","certificateNumber","birthYear","birthState","effectiveDate","effectiveTime","placeOfInjury","transportationEventIndicator","workInjuryIndicator","autopsyAvailable","comment","method","pronouncedDate","pronouncedTime","formatAddress","street","yesNoToCode","appendCOD","array","recordAndPatientToFHIR","model","certifierName","certifierStreet","certifierCity","certifierCounty","certifierState","certifierZip","get","pregnancy","pregnancyToCode","tobacco","mannerOfDeathToCode","placeOfDeathName","placeOfDeathStreet","placeOfDeathCity","placeOfDeathCounty","placeOfDeathStat","placeOfDeathZip","actualDeathDate","actualDeathTime","pronouncedDeathDate","pronouncedDeathTime","transportationInjury","transportationRoleToCode","dateOfInjury","timeOfInjury","injuryAtWork","howInjuryOccurred","locationOfInjuryState","locationOfInjuryStreet","locationOfInjuryCity","locationOfInjuryCounty","cod1Text","cod1Time","cod2Text","cod2Time","cod3Text","cod3Time","cod4Text","cod4Time","contributing","ReviewAndSubmit","edrsEndpoint","fhirData","ajaxParams","contentType","dataType","success","alert","statusText","bearerToken","beforeSend","xhr","setRequestHeader","headers","jQuery","ajax","reviewRow","title","Message","placeOfDeathType","placeOfDeathState","placeOfDeathApt","pronouncerName","pronouncerNumber","locationOfInjuryApt","locationOfInjuryZip","console","log","as","encodeURIComponent","download","App","certifierNumber","certifiedDate","standalone","setUser","prevState","newRecord","deceasedDate","deceasedTime","zip","newStep","updateRecord","clickedCondition","newConditions","slice","some","i","startDateTime","onset","from","container","renderStep","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","last","pathname","redirectUri","protocol","host","URL","process","origin","addEventListener","fetch","indexOf","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7e703694.chunk.js","sourcesContent":["require('core-js/fn/array');\n","import React from 'react';\nimport { Icon } from 'semantic-ui-react';\n\nfunction Loading(props) {\n  return (\n    <Icon className='loading' name='circle notched' loading size='huge'/>\n  );\n}\n\nexport default Loading;\n","import React from 'react';\nimport { Menu } from 'semantic-ui-react';\n\nfunction Header(props) {\n  return (\n    <Menu color='blue' inverted attached>\n      <Menu.Item header><h2>U.S. Standard Certificate of Death</h2></Menu.Item>\n      <Menu.Item name='about' position='right' />\n    </Menu>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { Card, Icon, List, Table } from 'semantic-ui-react';\n\nfunction PatientCard(props) {\n  const patient = props.patient;\n  if (patient) {\n    return (\n      <Card fluid color=\"blue\" className=\"patient\">\n        <Table className=\"patient-info-table\">\n          <Table.Body>\n            <Table.Row textAlign=\"center\">\n              {patient.name && (\n                <Table.Cell>\n                  <List.Item>\n                    <List.Content>\n                      <List.Header className=\"patient-info-header\">\n                        <Icon color=\"blue\" name=\"user\" />\n                        <span className=\"patient-info-header-text\">Name</span>\n                      </List.Header>\n                      {patient.name}\n                    </List.Content>\n                  </List.Item>\n                </Table.Cell>\n              )}\n              {patient.birthDate && (\n                <Table.Cell>\n                  <List.Item>\n                    <List.Content>\n                      <List.Header className=\"patient-info-header\">\n                        <Icon color=\"blue\" name=\"birthday\" />\n                        <span className=\"patient-info-header-text\">Birthdate</span>\n                      </List.Header>\n                      {patient.birthDate}\n                    </List.Content>\n                  </List.Item>\n                </Table.Cell>\n              )}\n              {patient.age && (\n                <Table.Cell>\n                  <List.Item>\n                    <List.Content>\n                      <List.Header className=\"patient-info-header\">\n                        <Icon color=\"blue\" name=\"calendar\" />\n                        <span className=\"patient-info-header-text\">Age at Death</span>\n                      </List.Header>\n                      {patient.age} old\n                    </List.Content>\n                  </List.Item>\n                </Table.Cell>\n              )}\n              {patient.race && (\n                <Table.Cell>\n                  <List.Item>\n                    <List.Content>\n                      <List.Header className=\"patient-info-header\">\n                        <Icon color=\"blue\" name=\"users\" />\n                        <span className=\"patient-info-header-text\">Race and Ethnicity</span>\n                      </List.Header>\n                      {patient.race}\n                      {patient.ethnicity && ', ' + patient.ethnicity}\n                    </List.Content>\n                  </List.Item>\n                </Table.Cell>\n              )}\n              {patient.gender && (\n                <Table.Cell>\n                  <List.Item>\n                    <List.Content>\n                      <List.Header className=\"patient-info-header\">\n                        <Icon\n                          color=\"blue\"\n                          name={(patient.gender === 'female' && 'woman') || (patient.gender === 'male' && 'man')}\n                        />\n                        <span className=\"patient-info-header-text\">Gender</span>\n                      </List.Header>\n                      {patient.gender}\n                    </List.Content>\n                  </List.Item>\n                </Table.Cell>\n              )}\n              {patient.address && (\n                <Table.Cell>\n                  <List.Item>\n                    <List.Content>\n                      <List.Header className=\"patient-info-header\">\n                        <Icon color=\"blue\" name=\"point\" />\n                        <span className=\"patient-info-header-text\">Address</span>\n                      </List.Header>\n                      {patient.address}\n                    </List.Content>\n                  </List.Item>\n                </Table.Cell>\n              )}\n            </Table.Row>\n          </Table.Body>\n        </Table>\n      </Card>\n    );\n  } else {\n    return null;\n  }\n}\n\nexport default PatientCard;\n","import moment from 'moment';\nimport _ from 'lodash';\n\n// Simple wrapper for FHIR Patient resource\nclass Patient {\n  constructor(resource) {\n    this.resource = resource;\n  }\n  get id() {\n    if (this.resource) {\n      return this.resource.id || null;\n    } else {\n      return null;\n    }\n  }\n  get name() {\n    // TODO: Common code with Practitioner.js\n    if (this.resource && this.resource.name) {\n      // Handle name as an array (take the first) or a singleton\n      let resourceName = _.isArray(this.resource.name) ? this.resource.name[0] : this.resource.name;\n      let names = [];\n      names = names.concat(resourceName.given);\n      names = names.concat(resourceName.family);\n      names = names.concat(resourceName.suffix);\n      let name = names.join(' ').trim();\n      if (name.length > 0) {\n        return name;\n      }\n    }\n    return null;\n  }\n  get age() {\n    if (this.resource) {\n      // Calculate either to date of death or to today\n      const startDate = this.resource.birthDate;\n      const endDate = this.resource.deceasedDateTime || new Date().toISOString();\n      if (startDate) {\n        return moment(endDate).diff(moment(startDate), 'years') + ' years';\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n  get deceasedDate() {\n    if (this.resource && this.resource.deceasedDateTime) {\n      return moment(this.resource.deceasedDateTime).format('YYYY-MM-DD');\n    } else {\n      return null;\n    }\n  }\n  get deceasedTime() {\n    if (this.resource && this.resource.deceasedDateTime) {\n      return moment(this.resource.deceasedDateTime).format('HH:mm');\n    } else {\n      return null;\n    }\n  }\n  get ssn() {\n    if (this.resource && this.resource.identifier && this.resource.identifier.length > 0) {\n      const ssn = this.resource.identifier.find(\n        iden => iden.system === 'http://hl7.org/fhir/sid/us-ssn'\n      );\n      if (ssn) {\n        return ssn.value;\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n  get race() {\n    if (this.resource && this.resource.extension && this.resource.extension.length > 0) {\n      const race = this.resource.extension.find(\n        ext => ext.url === 'http://hl7.org/fhir/StructureDefinition/us-core-race' || ext.url === 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-race'\n      );\n      if (\n        race &&\n        race.valueCodeableConcept &&\n        race.valueCodeableConcept.coding['0'] &&\n        race.valueCodeableConcept.coding['0'].display\n      ) {\n        return race.valueCodeableConcept.coding['0'].display;\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n  get ethnicity() {\n    if (this.resource && this.resource.extension && this.resource.extension.length > 0) {\n      const ethnicity = this.resource.extension.find(\n        ext => ext.url === 'http://hl7.org/fhir/StructureDefinition/us-core-ethnicity' || ext.url === 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity'\n      );\n      if (\n        ethnicity &&\n        ethnicity.valueCodeableConcept &&\n        ethnicity.valueCodeableConcept.coding['0'] &&\n        ethnicity.valueCodeableConcept.coding['0'].display\n      ) {\n        return ethnicity.valueCodeableConcept.coding['0'].display;\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n  get birthPlace() {\n    if (this.resource && this.resource.extension && this.resource.extension.length > 0) {\n      const birthPlace = this.resource.extension.find(\n        ext => ext.url === 'http://standardhealthrecord.org/fhir/extensions/placeOfBirth' || ext.url === 'http://hl7.org/fhir/StructureDefinition/birthPlace'\n      );\n      if (birthPlace && birthPlace.valueAddress) {\n        let birthPlaceCombined = `${birthPlace.valueAddress.city || ''} ${birthPlace.valueAddress.state || ''}`;\n        birthPlaceCombined = birthPlaceCombined.replace(/\\s/g, '');\n        if (birthPlaceCombined.length > 0) {\n          return birthPlaceCombined;\n        } else {\n          return null;\n        }\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n  get mothersMaidenName() {\n    if (this.resource && this.resource.extension && this.resource.extension.length > 0) {\n      const mothersMaidenName = this.resource.extension.find(\n        ext => ext.url === 'http://hl7.org/fhir/StructureDefinition/patient-mothersMaidenName'\n      );\n      if (mothersMaidenName) {\n        return mothersMaidenName.valueString;\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n  get gender() {\n    if (this.resource) {\n      return this.resource.gender || null;\n    } else {\n      return null;\n    }\n  }\n  get birthDate() {\n    if (this.resource) {\n      return this.resource.birthDate || null;\n    } else {\n      return null;\n    }\n  }\n  get deathDateTime() {\n    if (this.resource) {\n      const deathDateTime = this.resource.deceasedDateTime || new Date().toISOString();\n      return moment(deathDateTime).format('YYYY-MM-DD hh:mm');\n    } else {\n      return null;\n    }\n  }\n  get address() {\n    if (this.resource && this.resource.address) {\n      const addr = this.resource.address['0'];\n      if (addr) {\n        const line = `${addr.line ? addr.line : ''} ${addr.city ? addr.city : ''} ${addr.district ? addr.district : ''} ${addr.state ? addr.state : ''} ${addr.postalCode ? addr.postalCode : ''}`;\n        return line.replace(/\\s+/g, ' ');\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n  get maritalStatus() {\n    if (this.resource) {\n      const status = this.resource.maritalStatus;\n      if (status && status.coding['0'] && status.coding['0'].code) {\n        switch (status.coding['0'].code) {\n          case 'A':\n            return 'Annulled';\n          case 'D':\n            return 'Divorced';\n          case 'I':\n            return 'Interlocutory';\n          case 'L':\n            return 'Legally';\n          case 'M':\n            return 'Married';\n          case 'P':\n            return 'Polygamous';\n          case 'S':\n            return 'Never Married';\n          case 'T':\n            return 'Domestic partner';\n          case 'U':\n            return 'Unmarried';\n          case 'W':\n            return 'Widowed';\n          default:\n            return 'Unknown';\n        }\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Patient;\n","import _ from 'lodash';\n\n// Simple wrapper for FHIR Practitioner resource\nclass Practitioner {\n  constructor(resource) {\n    this.resource = resource;\n  }\n  get id() {\n    return this.resource.id;\n  }\n  get name() {\n    // TODO: Common code with Patient.js\n    if (this.resource && this.resource.name) {\n      // Handle name as an array (take the first) or a singleton\n      let resourceName = _.isArray(this.resource.name) ? this.resource.name[0] : this.resource.name;\n      let names = [];\n      names = names.concat(resourceName.given);\n      names = names.concat(resourceName.family);\n      names = names.concat(resourceName.suffix);\n      let name = names.join(' ').trim();\n      if (name.length > 0) {\n        return name;\n      }\n    }\n    return null;\n  }\n  get street() {\n    if (this.resource.address && this.resource.address[0] && this.resource.address[0].line[0]) {\n      return this.resource.address[0].line[0];\n    }\n    return null;\n  }\n  get city() {\n    if (this.resource.address && this.resource.address[0]) {\n      return this.resource.address[0].city;\n    }\n    return null;\n  }\n  get county() {\n    if (this.resource.address && this.resource.address[0]) {\n      return this.resource.address[0].district;\n    }\n    return null;\n  }\n  get state() {\n    if (this.resource.address && this.resource.address[0]) {\n      return this.resource.address[0].state;\n    }\n    return null;\n  }\n  get zip() {\n    if (this.resource.address && this.resource.address[0]) {\n      return this.resource.address[0].postalCode;\n    }\n    return null;\n  }\n}\n\nexport default Practitioner;\n","import moment from 'moment';\nimport Practitioner from './Practitioner';\n\n// Helper function for formatting a date\nfunction formatDate(date) {\n  if (date) {\n    return moment(date).format('MMMM Do YYYY');\n  }\n}\n\n// Simple wrapper for FHIR resources (conditions, medications, procedures, observations)\nclass Resource {\n\n  constructor(resource) {\n    this.resource = resource;\n  }\n\n  static wrap(resource) {\n    switch (resource.resourceType) {\n      case 'Condition': return new Condition(resource);\n      case 'Procedure': return new Procedure(resource);\n      case 'Observation': return new Observation(resource);\n      case 'MedicationRequest': return new MedicationRequest(resource);\n      case 'MedicationOrder': return new MedicationOrder(resource);\n      case 'Practitioner': return new Practitioner(resource);\n      default: return new Resource(resource);\n    }\n  }\n\n  get id() {\n    return this.resource.id;\n  }\n\n  get description() {\n    // Try to be robust against different FHIR representations\n    if (this.resource.code && this.resource.code.text) {\n      return this.resource.code.text;\n    } else if (this.resource.code && this.resource.code.coding && this.resource.code.coding[0].display) {\n      return this.resource.code.coding[0].display;\n    }\n    return null;\n  }\n\n  get formattedStartDate() {\n    return formatDate(this.startDate);\n  }\n\n  get formattedEndDate() {\n    return formatDate(this.endDate);\n  }\n\n  get formattedDateRange() {\n    if (this.formattedStartDate && this.formattedEndDate && this.formattedStartDate !== this.formattedEndDate) {\n      return `${this.formattedStartDate} through ${this.formattedEndDate}`;\n    } else if (this.startDate) {\n      return this.formattedStartDate;\n    }\n    return null;\n  }\n\n  // Sometimes we want to look at a referred resource, e.g. give a MedicationOrder we may want to look at the\n  // prescriber; this returns a promise that supplies the resource with the additional information within it\n  // TODO: Many resources may refer to the same other resource, caching might make sense\n  withEmbeddedResource(referencedResource, smart) {\n    if (this.resource[referencedResource] && this.resource[referencedResource].reference) {\n      const type = this.resource[referencedResource].reference.split('/').reverse()[1]; // Second to last element\n      const id = this.resource[referencedResource].reference.split('/').reverse()[0]; // Last element\n      return smart.api.read({ type: type, id: id }).then((response) => {\n        this[referencedResource] = Resource.wrap(response.data);\n        return this;\n      });\n    } else {\n      return Promise.resolve(this);\n    }\n  }\n}\n\nclass Condition extends Resource {\n  get startDate() {\n    return this.resource.onsetDateTime;\n  }\n  get endDate() {\n    return this.resource.abatementDateTime;\n  }\n}\n\nclass Procedure extends Resource {\n  get startDate() {\n    return this.resource.performedDateTime || this.resource.performedPeriod.start;\n  }\n  get endDate() {\n    if (this.resource.performedPeriod) {\n      return this.resource.performedPeriod.end;\n    }\n    return null;\n  }\n  get additionalText() {\n    if (this.resource.reasonReference && this.resource.reasonReference[0] && this.resource.reasonReference[0].display) {\n      return `Reason: ${this.resource.reasonReference[0].display}`;\n    }\n    return null;\n  }\n}\n\nclass Observation extends Resource {\n  get startDate() {\n    return this.resource.effectiveDateTime;\n  }\n  get endDate() {\n    return this.resource.effectiveDateTime;\n  }\n  get additionalText() {\n    if (this.resource.valueQuantity && this.resource.valueQuantity.value) {\n      return `Value: ${this.resource.valueQuantity.value} ${this.resource.valueQuantity.unit}`;\n    }\n    return null;\n  }\n}\n\nclass MedicationRequest extends Resource {\n  constructor(resource, medicationResource = null) {\n    super(resource);\n    this.medicationResource = medicationResource;\n  }\n  get description() {\n    if (this.medicationReference) {\n      return this.medicationReference.description;\n    } else if (this.resource.medicationCodeableConcept && this.resource.medicationCodeableConcept.coding) {\n      return this.resource.medicationCodeableConcept.coding[0].display;\n    }\n    return null;\n  }\n  get startDate() {\n    return this.resource.dateWritten || this.resource.authoredOn;\n  }\n  get endDate() {\n    return this.resource.dateWritten || this.resource.authoredOn;\n  }\n}\n\nclass MedicationOrder extends Resource {\n  get description() {\n    if (this.medicationReference) {\n      return this.medicationReference.description;\n    } else if (this.resource.medicationCodeableConcept && this.resource.medicationCodeableConcept.coding) {\n      return this.resource.medicationCodeableConcept.coding[0].display;\n    }\n    return null;\n  }\n  get startDate() {\n    return this.resource.dateWritten || this.resource.authoredOn;\n  }\n  get endDate() {\n    return this.resource.dateWritten || this.resource.authoredOn;\n  }\n}\n\nexport default Resource;\n","import Patient from './Patient';\nimport Practitioner from './Practitioner';\nimport Resource from './Resource';\nimport _ from 'lodash';\nimport moment from 'moment';\n\n// Wrap our usage of fhirclient with some simple utilities\n\n// fhirclient doesn't seem to play nice with create-react-app: it doesn't\n// export anything and it puts FHIR in window; work around for now\nimport nothing from 'fhirclient/dist'; // eslint-disable-line no-unused-vars\nconst FHIR = window.FHIR;\n\n// Wrap the oauth ready functionality, providing the SMART context, both so that we don't need\n// the fhirclient load hack in more than one place and so we can wrap it in a promise\nconst smartReady = () => {\n  return new Promise((resolve) => {\n    FHIR.oauth2.ready((smart) => {\n      resolve(smart)\n    });\n  });\n}\n\n// Some common functions for both basic FHIR and within a SMART context\n\n// Given a SMART context and a search string (which can be blank), returns a promise\n// that provides a list of patients loaded from the server\nconst loadPatients = (smart, searchQuery) => {\n  const searchParams = { type: 'Patient' };\n  if (searchQuery) {\n    searchParams.query = searchQuery;\n  }\n  return smart.api.search(searchParams).then((response) => {\n    if (response.data && response.data.entry) {\n      return response.data.entry.map((entry) => new Patient(entry.resource));\n    } else {\n      return [];\n    }\n  });\n}\n\nconst loadResources = (smart, patientId) => {\n  const getResources = (type) => {\n    // We need to wrap the results of smart.api.search with a real promise, using the jQuery\n    // promise directly results in unexpected behavior\n    return new Promise((resolve) => {\n      return smart.api.search({ type: type, query: { patient: patientId } }).then((response) => {\n        // Different FHIR servers indicate the presence of results differently, try to be robust\n        if ((_.isUndefined(response.data.total) && response.data.entry) ||\n            (_.isNumber(response.data.total) && response.data.total > 0 && response.data.entry)) {\n          const resources = response.data.entry.map((entry) => Resource.wrap(entry.resource));\n          resolve(_.sortBy(resources, (resource) => moment(resource.startDate)).reverse());\n        } else {\n          resolve([]);\n        }\n      }, (error) => {\n        resolve([]); // Eat errors for the moment\n      });\n    });\n  };\n\n  // MedicationRequests might have information on which medication in a separate resource\n  const withMedications = (medicationRequests) => {\n    return Promise.all(medicationRequests.map((medicationRequest) => {\n      return medicationRequest.withEmbeddedResource('medicationReference', smart);\n    }));\n  };\n\n  // For medication orders we'd like to refer to the prescriber\n  const withPrescribers = (medicationOrders) => {\n    return Promise.all(medicationOrders.map((medicationOrder) => {\n      return medicationOrder.withEmbeddedResource('prescriber', smart);\n    }));\n  }\n\n  // Utility function: resolve an array of promises with the first promise that resolves with a non-empty\n  // result; we use this to support either MedicationRequest or MedicationOrder\n  const any = (promises) => {\n    return new Promise((resolve) => {\n      Promise.all(promises).then((results) => {\n        for (var result of results) {\n          if (result.length > 0) {\n            resolve(result)\n          }\n        }\n        resolve([]);\n      });\n    });\n  }\n\n  return Promise.all([getResources('Condition'),\n                      any([getResources('MedicationRequest').then(withMedications),\n                           getResources('MedicationOrder').then(withPrescribers).then(withMedications)]),\n                      getResources('Procedure'),\n                      getResources('Observation')]);\n}\n\n\nconst FHIRWrap = {\n\n  // Given a FHIR server URL and a search string (which can be blank), returns a promise\n  // that provides a list of patients loaded from the server\n  loadPatients(fhirServer, searchQuery) {\n    const smart = FHIR.client({ serviceUrl: fhirServer });\n    return loadPatients(smart, searchQuery);\n  },\n\n  // Given a FHIR server URL and a patient, returns a promise that provides the patient's\n  // conditions, medications, procedures, and observations loaded from the server\n  loadResources(fhirServer, patientId) {\n    const smart = FHIR.client({ serviceUrl: fhirServer });\n    return loadResources(smart, patientId);\n  }\n}\n\nconst SMARTWrap = {\n\n  // Wrap the oauth ready functionality so that we don't need the fhirclient load hack in more than one place\n  ready() {\n    return smartReady();\n  },\n\n  // Wrap the oauth authorize functionality too\n  authorize(settings) {\n    FHIR.oauth2.authorize(settings);\n  },\n\n  // Given a search string (which can be blank), returns a promise\n  // that provides a list of patients loaded from the server\n  loadPatients(searchQuery) {\n    return smartReady().then((smart) => {\n      return loadPatients(smart, searchQuery)\n    });\n  },\n\n  // Given a patient, returns a promise that provides the patient's conditions,\n  // medications, procedures, and observations loaded from the server\n  loadResources(patientId) {\n    return smartReady().then((smart) => {\n      return loadResources(smart, patientId)\n    });\n  },\n\n  // Return a promise that, if the app is loaded in a SMART context, provides the loaded\n  // user, patient, conditions, medications, procedures, and observations\n  load() {\n    return smartReady().then((smart) => {\n      const user = smart.user.read();\n      const patient = smart.patient.read();\n      const resources = FHIRWrap.loadResources(smart.server.serviceUrl, smart.patient.id);\n      return Promise.all([user, patient, resources]).then(([user, patient, resources]) => {\n        patient = new Patient(patient);\n        user = new Practitioner(user);\n        return [user, patient].concat(resources);\n      });\n    });\n  }\n}\n\nexport { SMARTWrap, FHIRWrap };\n","// Allow state for individual components to be stored in local browser storage\nconst StateStorage = {\n\n  retrieveState(stateKey, defaultState) {\n    const localState = localStorage[stateKey];\n    if (localState) {\n      return Object.assign({}, defaultState, JSON.parse(localState));\n    } else {\n      return defaultState;\n    }\n  },\n\n  storeState(stateKey, state) {\n    localStorage[stateKey] = JSON.stringify(state);\n  }\n\n}\n\nexport default StateStorage;\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport { Form, Button, Loader, Card } from 'semantic-ui-react';\nimport { FHIRWrap, SMARTWrap } from './FHIRClientWrapper';\nimport StateStorage from './StateStorage';\n\nclass PatientSearch extends Component {\n\n  constructor(props) {\n    super(props);\n    // See if we have state from previous use stored in local browser storage\n    const searchState = StateStorage.retrieveState('statePatientSearch', { name: '', given: '', family: '' });\n    this.state = Object.assign({}, searchState, { searching: false });\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFhirServerChange = this.handleFhirServerChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handlePatientClick = this.handlePatientClick.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    this.setState({ [target.name]: target.value }, () => {\n      // Store search state in local browser storage to preserve between uses\n      StateStorage.storeState('statePatientSearch', _.pick(this.state, ['name', 'given', 'family']));\n    });\n  }\n\n  handleFhirServerChange(event) {\n    this.props.updateFhirServer(event.target.value);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.setState({ patients: [], searching: true });\n    const searchQuery = {};\n    if (this.state.name.length > 0) {\n      searchQuery.name = this.state.name;\n    }\n    if (this.state.given.length > 0) {\n      searchQuery.given = this.state.given;\n    }\n    if (this.state.family.length > 0) {\n      searchQuery.family = this.state.family;\n    }\n    // The search we use depends on whether we're in a SMART on FHIR context\n    if (this.props.smart) {\n      SMARTWrap.loadPatients(searchQuery).then((patients) => {\n        this.setState({ patients, searching: false });\n      });\n    } else {\n      FHIRWrap.loadPatients(this.props.fhirServer, searchQuery).then((patients) => {\n        this.setState({ patients, searching: false });\n      });\n    }\n  }\n\n  handlePatientClick(event, data) {\n    event.preventDefault();\n    const patient = this.state.patients.find((patient) => patient.id === data.id);\n    this.props.handlePatientSelect(patient);\n  }\n\n  render() {\n\n    const patientLink = (patient) => {\n      return <Card key={patient.id} onClick={this.handlePatientClick} id={patient.id} header={patient.name} />;\n    };\n\n    const patientLinks = (patients) => {\n      if (this.state.searching) {\n        return <Loader active inline='centered' content='Loading' />;\n      } else {\n        if (!patients) {\n          return null;\n        } else if (patients.length === 0) {\n          return \"No Results Found\";\n        } else {\n          return <Card.Group className='patients'>{patients.map(patientLink)}</Card.Group>;\n        }\n      }\n    };\n\n    // Allow the user to select the FHIR server, displayed only if we're not in SMART on FHIR mode\n    const fhirServerFormField = (\n      <Form.Field>\n        <label>FHIR server:</label>\n        <input type=\"text\" name=\"fhirServer\" value={this.props.fhirServer} onChange={this.handleFhirServerChange} />\n      </Form.Field>\n    );\n\n    return (\n      <div>\n        <h3>Specify { this.props.smart ? '' : 'FHIR server and' } patient name to search for</h3>\n        <Form onSubmit={this.handleSubmit}>\n          { this.props.smart ? null : fhirServerFormField }\n          <Form.Field>\n            <label>Decedent name:</label>\n            <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\n          </Form.Field>\n          <Form.Field>\n            <label>Decedent given name:</label>\n            <input type=\"text\" name=\"given\" value={this.state.given} onChange={this.handleChange} />\n          </Form.Field>\n          <Form.Field>\n            <label>Decedent family name:</label>\n            <input type=\"text\" name=\"family\" value={this.state.family} onChange={this.handleChange} />\n          </Form.Field>\n          <Button primary disabled={this.props.fhirServer === ''} type=\"submit\">Search</Button>\n        </Form>\n        {patientLinks(this.state.patients)}\n      </div>\n    );\n  }\n\n}\n\nexport default PatientSearch;\n","import React, { Component } from 'react';\nimport { FHIRWrap } from './FHIRClientWrapper';\nimport PatientSearch from './PatientSearch';\nimport StateStorage from './StateStorage';\n\nconst defaultFhirServer = 'https://syntheticmass.mitre.org/fhir';\n\nclass Welcome extends Component {\n\n  constructor(props) {\n    super(props);\n    // See if we have state from previous use stored in local browser storage\n    this.state = StateStorage.retrieveState('stateWelcomePlain', { fhirServer: defaultFhirServer });\n    this.handlePatientSelect = this.handlePatientSelect.bind(this);\n    this.updateFhirServer = this.updateFhirServer.bind(this);\n  }\n\n  handlePatientSelect(patient) {\n    FHIRWrap.loadResources(this.state.fhirServer, patient.id).then(([conditions, medications, procedures, observations]) => {\n      this.props.setResources(conditions, medications, procedures, observations);\n    });\n    this.props.setPatient(patient);\n    this.props.gotoStep('Pronouncing');\n  }\n\n  updateFhirServer(fhirServer) {\n    // Store state in local browser storage to preserve between uses\n    this.setState({ fhirServer }, () => StateStorage.storeState('stateWelcomePlain', this.state));\n  }\n\n  render() {\n    return <PatientSearch handlePatientSelect={this.handlePatientSelect}\n                          updateFhirServer={this.updateFhirServer}\n                          fhirServer={this.state.fhirServer} />;\n  }\n\n}\n\nexport default Welcome;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Form, Button } from 'semantic-ui-react';\nimport { SMARTWrap } from './FHIRClientWrapper';\nimport StateStorage from './StateStorage';\nimport Loading from './Loading';\n\nconst redirectURI = window.location.href + 'standalone'\n\nclass WelcomeSmart extends Component {\n\n  constructor(props) {\n    super(props);\n    // See if we have state from previous use stored in local browser storage\n    this.state = StateStorage.retrieveState('stateWelcomeSmart', { fhirServer: '', clientId: '', secret: '' });\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    // Store state in local browser storage to preserve between uses\n    this.setState({ [target.name]: target.value }, () => StateStorage.storeState('stateWelcomeSmart', this.state));\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const server = this.state.fhirServer;\n    const client = {\n      scope: 'patient/*.read user/Patient.read launch openid profile online_access',\n      client_id: this.state.clientId,\n      redirect_uri: redirectURI\n    }\n    if (this.state.secret) {\n      client['secret'] = this.state.secret;\n    }\n    SMARTWrap.authorize({ server: server, client: client });\n    ReactDOM.render(<Loading />, document.getElementById('root'));\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Specify information for the SMART on FHIR server to launch against</h3>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Field>\n            <label>FHIR server:</label>\n            <input type=\"text\" name=\"fhirServer\" value={this.state.fhirServer} onChange={this.handleChange} />\n          </Form.Field>\n          <Form.Field>\n            <label>Client ID:</label>\n            <input type=\"text\" name=\"clientId\" value={this.state.clientId} onChange={this.handleChange} />\n          </Form.Field>\n          <Form.Field>\n            <label>Secret (if needed):</label>\n            <input type=\"password\" name=\"secret\" value={this.state.secret} onChange={this.handleChange} />\n          </Form.Field>\n          <p>Note: Specify <tt>{redirectURI}</tt> as the redirect URL on the SMART on FHIR server.</p>\n          <p>Note: The information you enter above is stored in your local browser state to make it available across uses.</p>\n          <Button primary type=\"submit\">Connect</Button>\n        </Form>\n      </div>\n    );\n  }\n\n}\n\nexport default WelcomeSmart;\n","import React, { Component } from 'react';\nimport { Menu } from 'semantic-ui-react';\nimport WelcomePlain from './WelcomePlain';\nimport WelcomeSmart from './WelcomeSmart';\n\nclass Welcome extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { selectedMenuItem: 'plain' };\n    this.handleMenuClick = this.handleMenuClick.bind(this);\n  }\n\n  handleMenuClick(event, data) {\n    this.setState({ selectedMenuItem: data.name });\n  }\n\n  render() {\n    const { selectedMenuItem } = this.state;\n    return (\n      <div>\n        <h2>Welcome</h2>\n        <p>The purpose of this application is to provide visualization, context, and decision support at the point of a patient's death, with the aim of improving the timeliness, accuracy, and completeness of mortality reporting. Source code and documentation can be <a href=\"https://github.com/nightingaleproject/fhir-death-refactor\">found on GitHub</a>.</p>\n        <Menu pointing>\n          <Menu.Item name='plain'\n                     active={selectedMenuItem === 'plain'}\n                     onClick={this.handleMenuClick}>\n            Connect to a plain FHIR server\n          </Menu.Item>\n          <Menu.Item name='smart'\n                     active={selectedMenuItem === 'smart'}\n                     onClick={this.handleMenuClick}>\n            SMART on FHIR standalone launch\n          </Menu.Item>\n        </Menu>\n        { selectedMenuItem === 'plain' ? <WelcomePlain {...this.props}/> : <WelcomeSmart {...this.props}/> }\n      </div>\n    );\n  }\n\n}\n\nexport default Welcome;\n","import React, { Component } from 'react';\nimport { SMARTWrap } from './FHIRClientWrapper';\nimport PatientSearch from './PatientSearch';\n\nclass StandalonePatientSearch extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { fhirServer: '', decedentName: '' };\n    this.handlePatientSelect = this.handlePatientSelect.bind(this);\n  }\n\n  componentDidMount() {\n    SMARTWrap.ready().then((smart) => {\n      this.setState({ fhirServer: smart.server.serviceUrl });\n    });\n  }\n\n  handlePatientSelect(patient) {\n    SMARTWrap.loadResources(patient.id).then(([conditions, medications, procedures, observations]) => {\n      this.props.setResources(conditions, medications, procedures, observations);\n    });\n    this.props.setPatient(patient);\n    this.props.gotoStep('Pronouncing');\n  }\n\n  render() {\n    return <PatientSearch smart handlePatientSelect={this.handlePatientSelect} fhirServer={this.state.fhirServer} />;\n  }\n\n}\n\nexport default StandalonePatientSearch;\n","import _ from 'lodash';\n\n// Track the completion of forms that get filled out by the user for each step\nconst Completion = {\n\n  // Register that a particular field is presented on a step\n  register(field, step, optional) {\n    this.fields[step] = this.fields[step] || [];\n    if (!optional) {\n      this.fields[step] = _.union(this.fields[step], [field]);\n    }\n  },\n\n  // Return result of whether a particular step is complete given the overall record\n  isComplete(step, record) {\n    const stepFields = this.fields[step];\n    if (!stepFields) {\n      // Step not yet visited, so nothing filled out\n      return false;\n    }\n    const relevantRecordFields = _.pick(record, stepFields);\n    const completedFieldCount = _.chain(relevantRecordFields).values().filter((value) => value).value().length;\n    const totalFieldCount = stepFields.length;\n    return completedFieldCount === totalFieldCount;\n  },\n\n  // Place to store the fields that appear on each step\n  fields: {}\n}\n\nexport default Completion;\n","import React, { Component } from 'react';\nimport { Input, Step, Form, Icon, Button } from 'semantic-ui-react';\nimport Completion from './Completion';\n\nclass FormPage extends Component {\n\n  constructor(props) {\n    super(props);\n    this.input = this.input.bind(this);\n    this.radio = this.radio.bind(this);\n  }\n\n  menuItem(stepName, currentStep, showCompletion) {\n    const isComplete = Completion.isComplete(stepName, this.props.record);\n    return (\n        <Step active={currentStep === stepName} onClick={() => this.props.gotoStep(stepName)}>\n          <Step.Content>\n            <Step.Title>\n              {showCompletion && (<Icon className='completion-icon' color='blue' name={isComplete ? 'check' : 'exclamation triangle'} />)}\n              {stepName.replace(/([A-Z])/g, ' $1').trim()}\n            </Step.Title>\n          </Step.Content>\n        </Step>\n    );\n  }\n\n  menu(currentStep) {\n    // Track what step this form page is for tracking fields for completion\n    this.currentStep = currentStep;\n    return (\n      <Step.Group size='small' fluid >\n        {this.menuItem('Pronouncing', currentStep, true)}\n        {this.menuItem('CauseOfDeath', currentStep, true)}\n        {this.menuItem('AdditionalQuestions', currentStep, true)}\n        {this.menuItem('InjuryQuestions', currentStep, true)}\n        {this.menuItem('ReviewAndSubmit', currentStep, false)}\n      </Step.Group>\n    );\n  }\n\n  input(type, name, options = {}) {\n    // Register this field for the current step for tracking form completion\n    Completion.register(name, this.currentStep, options['optional']);\n    return <Form.Input width={options['width']}>\n             <Input type={type}\n                    name={name}\n                    value={this.props.record[name]}\n                    label={options['label']}\n                    labelPosition={options['label'] ? 'right' : null}\n                    onChange={this.props.handleRecordChange} />\n           </Form.Input>;\n  }\n\n  textarea(name, options = {}) {\n    // Register this field for the current step for tracking form completion\n    Completion.register(name, this.currentStep, options['optional']);\n    return <Form.TextArea rows={5} name={name} value={this.props.record[name]} onChange={this.props.handleRecordChange} />;\n  }\n\n  radio(label, name, value, options = {}) {\n    // Register this field for the current step for tracking form completion\n    Completion.register(name, this.currentStep, options['optional']);\n    const checked = (this.props.record[name] === value);\n    return (\n        <Form.Field>\n          <Form.Radio label={label} name={name} value={value} checked={checked} onChange={this.props.handleRecordChange} />\n        </Form.Field>\n    );\n  }\n\n  nextStepButton(step) {\n    return <Button primary floated='right' onClick={() => this.props.gotoStep(step)}>Go to {step}</Button>;\n  }\n\n  componentDidMount() {\n    // When we first render, the menu can't know if the form is complete because the form fields haven't been\n    // registered yet; this call to componentDidMount happens after render, when the fields are registered; by\n    // setting a state value (which isn't actually referenced anywhere) we force a re-render if needed to\n    // update the completion based on the now registered form fields\n    this.setState({ isComplete: Completion.isComplete(this.currentStep, this.props.record) });\n  }\n}\n\nexport default FormPage;\n","import React from 'react';\nimport { Grid, Form } from 'semantic-ui-react';\nimport FormPage from './FormPage';\n\nclass PronounceForm extends FormPage {\n\n  render() {\n\n    return (\n\n      <React.Fragment>\n\n        <Grid.Row>\n          {this.menu('Pronouncing')}\n        </Grid.Row>\n\n        <Grid.Row>\n          <Grid.Column>\n\n            <Form>\n\n              <Form.Group widths='equal'>\n                <Form.Field>\n                  <label>Date Pronounced Dead:</label>\n                  {this.input('date', 'pronouncedDeathDate')}\n                </Form.Field>\n                <Form.Field>\n                  <label>Actual or Presumed Date of Death:</label>\n                  {this.input('date', 'actualDeathDate')}\n                </Form.Field>\n              </Form.Group>\n\n              <Form.Group widths='equal'>\n                <Form.Field>\n                  <label>Time Pronounced Dead:</label>\n                  {this.input('time', 'pronouncedDeathTime')}\n                </Form.Field>\n                <Form.Field>\n                  <label>Actual or Presumed Time of Death:</label>\n                  {this.input('time', 'actualDeathTime')}\n                </Form.Field>\n              </Form.Group>\n\n              <Form.Group widths='equal'>\n                <Form.Field>\n                  <Form.Group grouped>\n                    <label>Place of Death Type:</label>\n                    {this.radio('Dead on arrival at hospital', 'placeOfDeathType', 'Dead on arrival at hospital', { optional: true })}\n                    {this.radio('Death in home', 'placeOfDeathType', 'Death in home', { optional: true })}\n                    {this.radio('Death in hospice', 'placeOfDeathType', 'Death in hospice', { optional: true })}\n                    {this.radio('Death in hospital', 'placeOfDeathType', 'Death in hospital', { optional: true })}\n                    {this.radio('Death in hospital-based emergency department or outpatient department', 'placeOfDeathType', 'Death in hospital-based emergency department or outpatient department', { optional: true })}\n                    {this.radio('Death in nursing home or long term care facility', 'placeOfDeathType', 'Death in nursing home or long term care facility', { optional: true })}\n                  </Form.Group>\n                </Form.Field>\n                <Form.Field>\n                  <Form.Group grouped>\n                    <label>Was Medical Examiner or Coroner Contacted?</label>\n                    {this.radio('Yes', 'examinerContacted', 'Yes')}\n                    {this.radio('No', 'examinerContacted', 'No')}\n                  </Form.Group>\n                </Form.Field>\n              </Form.Group>\n\n              <Form.Field>\n                <label>Name and Address of Place of Death</label>\n              </Form.Field>\n              <Form.Field>\n                <label>Name:</label>\n                {this.input('text', 'placeOfDeathName')}\n              </Form.Field>\n              <Form.Group>\n                <Form.Field width={13}>\n                  <label>Street:</label>\n                  {this.input('text', 'placeOfDeathStreet', { optional: true })}\n                </Form.Field>\n                <Form.Field width={3}>\n                  <label>Apt:</label>\n                  {this.input('text', 'placeOfDeathApt', { optional: true })}\n                </Form.Field>\n              </Form.Group>\n              <Form.Group widths='equal'>\n                <Form.Field>\n                  <label>City:</label>\n                  {this.input('text', 'placeOfDeathCity', { optional: true })}\n                </Form.Field>\n                <Form.Field>\n                  <label>County:</label>\n                  {this.input('text', 'placeOfDeathCounty', { optional: true })}\n                </Form.Field>\n                <Form.Field>\n                  <label>State:</label>\n                  {this.input('text', 'placeOfDeathState', { optional: true })}\n                </Form.Field>\n                <Form.Field>\n                  <label>Zip Code:</label>\n                  {this.input('text', 'placeOfDeathZip', { optional: true })}\n                </Form.Field>\n              </Form.Group>\n\n              <h2>Person Pronouncing Death</h2>\n\n              <Form.Field>\n                <label>Type your full name to electronically sign this document:</label>\n                {this.input('text', 'pronouncerName')}\n              </Form.Field>\n\n              <Form.Field>\n                <label>License Number:</label>\n                {this.input('text', 'pronouncerNumber')}\n              </Form.Field>\n\n              {this.nextStepButton('CauseOfDeath')}\n\n            </Form>\n\n          </Grid.Column>\n        </Grid.Row>\n      </React.Fragment>\n    );\n  }\n\n}\n\nexport default PronounceForm;\n","import React, { Component } from 'react';\nimport { Menu, Card, Input, Icon } from 'semantic-ui-react';\n\nclass Timeline extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { tab: \"Conditions\", searchString: \"\" };\n    this.gotoTab = this.gotoTab.bind(this);\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n  }\n\n  gotoTab(newTab) {\n    this.setState({ tab: newTab });\n  }\n\n  handleSearchChange(event, input) {\n    this.setState({ searchString: input.value });\n  }\n\n  render() {\n\n    const conditionLinks = (conditions) => {\n      if (!conditions || conditions.length === 0) {\n        return <p>No conditions found</p>;\n      } else {\n        return conditions.map((condition) => {\n          const selected = this.props.selectedConditions.includes(condition);\n          return (\n            <Card fluid key={condition.id} id={condition.id} onClick={this.props.handleConditionClick}>\n              <Card.Content>\n                <Card.Header>{condition.description} {selected ? <Icon name='check' /> : null}</Card.Header>\n                <Card.Meta>{condition.formattedDateRange}</Card.Meta>\n              </Card.Content>\n            </Card>\n          );\n        });\n      }\n    };\n\n    const resourceCards = (name, resources) => {\n      if (!resources || resources.length === 0) {\n        return <p>No {name} found</p>;\n      } else {\n        return resources.map((resource) => {\n          const prescriber = resource.prescriber;\n          return (\n            <Card fluid key={resource.id}>\n              <Card.Content>\n                <Card.Header>{resource.description}</Card.Header>\n                {prescriber ? <Card.Meta>Prescribed by {prescriber.name}</Card.Meta> : null }\n                <Card.Meta>{resource.formattedDateRange}</Card.Meta>\n                <Card.Description>{resource.additionalText}</Card.Description>\n              </Card.Content>\n            </Card>\n          );\n        });\n      }\n    };\n\n    const searchRegex = new RegExp(this.state.searchString, 'gi');\n    const resourceFilter = (element) => element.description && element.description.match(searchRegex);\n\n    const displayedConditions = (this.props.conditions || []).filter(resourceFilter);\n    const displayedProcedures = (this.props.procedures || []).filter(resourceFilter);\n    const displayedObservations = (this.props.observations || []).filter(resourceFilter);\n    const displayedMedications = (this.props.medications || []).filter(resourceFilter);\n\n    const renderTab = (tab) => {\n      switch (tab) {\n      case 'Conditions':\n      default:\n        return conditionLinks(displayedConditions);\n      case 'Procedures':\n        return resourceCards('procedures', displayedProcedures);\n      case 'Tests':\n        return resourceCards('tests', displayedObservations);\n      case 'Medications':\n        return resourceCards('medications', displayedMedications);\n      }\n    };\n\n    const menuItem = (name, resources) => {\n      resources = resources || [];\n      return (\n          <Menu.Item active={this.state.tab === name} onClick={() => this.gotoTab(name)}>\n            {name} ({resources.length})\n          </Menu.Item>\n      );\n    }\n\n    return (\n      <div className=\"timeline\">\n        <Menu tabular>\n          {menuItem('Conditions', displayedConditions)}\n          {menuItem('Procedures', displayedProcedures)}\n          {menuItem('Tests', displayedObservations)}\n          {menuItem('Medications', displayedMedications)}\n        </Menu>\n        <Input fluid icon='search' placeholder='Search...' onChange={this.handleSearchChange} />\n        {renderTab(this.state.tab)}\n      </div>\n    );\n  }\n}\n\nexport default Timeline;\n","import React from 'react';\nimport { Grid, Form, Button } from 'semantic-ui-react';\nimport FormPage from './FormPage';\nimport Timeline from './Timeline';\n\nclass CauseOfDeathForm extends FormPage {\n\n  render() {\n\n    const deleteButton = (condition) => {\n      if (condition) {\n        return <Button icon='delete' id={condition.id} onClick={this.props.handleConditionClick} />;\n      }\n    };\n\n    return (\n      <React.Fragment>\n\n        <Grid.Row>\n          {this.menu('CauseOfDeath')}\n        </Grid.Row>\n\n        <Grid.Row>\n          <Grid.Column width={8}>\n            <Timeline conditions={this.props.conditions}\n                      selectedConditions={this.props.selectedConditions}\n                      medications={this.props.medications}\n                      procedures={this.props.procedures}\n                      observations={this.props.observations}\n                      handleConditionClick={this.props.handleConditionClick} />\n          </Grid.Column>\n\n          <Grid.Column width={8}>\n\n            <Form>\n\n              <Form.Field>\n                <label>Immediate Cause</label>\n              </Form.Field>\n\n              <Form.Group>\n                {this.input('text', 'cod1Time', { width: 4 })}\n                {this.input('text', 'cod1Text', { width: 12, label: deleteButton(this.props.selectedConditions[0]) })}\n              </Form.Group>\n\n              <Form.Field>\n                <label>Underlying Causes</label>\n              </Form.Field>\n\n              <Form.Group>\n                {this.input('text', 'cod2Time', { width: 4, optional: true })}\n                {this.input('text', 'cod2Text', { width: 12, optional: true, label: deleteButton(this.props.selectedConditions[1]) })}\n              </Form.Group>\n\n              <Form.Group>\n                {this.input('text', 'cod3Time', { width: 4, optional: true })}\n                {this.input('text', 'cod3Text', { width: 12, optional: true, label: deleteButton(this.props.selectedConditions[2]) })}\n              </Form.Group>\n\n              <Form.Group>\n                {this.input('text', 'cod4Time', { width: 4, optional: true })}\n                {this.input('text', 'cod4Text', { width: 12, optional: true, label: deleteButton(this.props.selectedConditions[3]) })}\n              </Form.Group>\n\n              <Form.Field>\n                <label>Other Significant Conditions</label>\n              </Form.Field>\n\n              {this.textarea('contributing', { optional: true })}\n\n              {this.nextStepButton('AdditionalQuestions')}\n\n            </Form>\n\n          </Grid.Column>\n        </Grid.Row>\n      </React.Fragment>\n    );\n  }\n\n}\n\nexport default CauseOfDeathForm;\n","import React from 'react';\nimport { Grid, Form } from 'semantic-ui-react';\nimport FormPage from './FormPage';\n\nclass AdditionalQuestionsForm extends FormPage {\n\n  render() {\n\n    return (\n      <React.Fragment>\n\n        <Grid.Row>\n          {this.menu('AdditionalQuestions')}\n        </Grid.Row>\n\n        <Grid.Row>\n\n          <Grid.Column width={8}>\n\n            <Form>\n              <Form.Field>\n                <label>Was an Autopsy Performed?</label>\n              </Form.Field>\n              {this.radio('Yes', 'autopsyPerformed', 'Yes')}\n              {this.radio('No', 'autopsyPerformed', 'No')}\n\n              <Form.Field>\n                <label>Were Autopsy Findings Available to Complete the Case of Death?</label>\n              </Form.Field>\n              {this.radio('Yes', 'autopsyAvailable', 'Yes')}\n              {this.radio('No', 'autopsyAvailable', 'No')}\n\n              <Form.Field>\n                <label>Manner of Death:</label>\n              </Form.Field>\n              {this.radio('Natural', 'mannerOfDeath', 'Natural')}\n              {this.radio('Homicide', 'mannerOfDeath', 'Homicide')}\n              {this.radio('Accident', 'mannerOfDeath', 'Accident')}\n              {this.radio('Suicide', 'mannerOfDeath', 'Suicide')}\n              {this.radio('Pending Investigation', 'mannerOfDeath', 'Pending Investigation')}\n              {this.radio('Could not be Determined', 'mannerOfDeath', 'Could not be determined')}\n            </Form>\n\n          </Grid.Column>\n          <Grid.Column width={8}>\n\n            <Form>\n              <Form.Field>\n                <label>Did tobacco use contribute to death?</label>\n              </Form.Field>\n              {this.radio('Yes', 'tobacco', 'Yes')}\n              {this.radio('No', 'tobacco', 'No')}\n              {this.radio('Probably', 'tobacco', 'Probably')}\n              {this.radio('Unknown', 'tobacco', 'Unknown')}\n\n              <Form.Field>\n                <label>If female:</label>\n              </Form.Field>\n              {this.radio('Not pregnant within past year', 'pregnancy', 'Not pregnant within past year', { optional: true })}\n              {this.radio('Pregnant at time of death', 'pregnancy', 'Pregnant at time of death', { optional: true })}\n              {this.radio('Not pregnant, but pregnant within 42 days of death', 'pregnancy', 'Not pregnant, but pregnant within 42 days of death', { optional: true })}\n              {this.radio('Not pregnant, but pregnant 43 days to 1 year before death', 'pregnancy', 'Not pregnant, but pregnant 43 days to 1 year before death', { optional: true })}\n              {this.radio('Unknown if pregnant within the past year', 'pregnancy', 'Unknown if pregnant within the past year', { optional: true })}\n\n              {this.nextStepButton('InjuryQuestions')}\n            </Form>\n\n          </Grid.Column>\n        </Grid.Row>\n      </React.Fragment>\n    );\n  }\n\n}\n\nexport default AdditionalQuestionsForm;\n","import React from 'react';\nimport { Grid, Form } from 'semantic-ui-react';\nimport FormPage from './FormPage';\n\nclass InjuryQuestionsForm extends FormPage {\n\n  render() {\n\n    return (\n      <React.Fragment>\n\n        <Grid.Row>\n          {this.menu('InjuryQuestions')}\n        </Grid.Row>\n\n        <Grid.Row>\n          <Grid.Column>\n\n            <Form>\n\n              <Form.Group widths='equal'>\n                <Form.Field>\n                  <label>Date of Injury:</label>\n                  {this.input('date', 'dateOfInjury', { optional: true })}\n                </Form.Field>\n                <Form.Field>\n                  <label>Time of Injury:</label>\n                  {this.input('time', 'timeOfInjury', { optional: true })}\n                </Form.Field>\n              </Form.Group>\n\n              <Form.Field>\n                <label>Place of Injury:</label>\n                {this.input('text', 'placeOfInjury', { optional: true })}\n              </Form.Field>\n\n              <Grid>\n                <Grid.Row>\n                  <Grid.Column width={8}>\n                    <Form.Field>\n                      <label>Injury at work?</label>\n                    </Form.Field>\n                    {this.radio('Yes', 'injuryAtWork', 'Yes', { optional: true })}\n                    {this.radio('No', 'injuryAtWork', 'No', { optional: true })}\n                  </Grid.Column>\n                  <Grid.Column width={8}>\n                    <Form.Field>\n                      <label>If transportation injury, specify</label>\n                    </Form.Field>\n                    {this.radio('Driver/Operator', 'transportationInjury', 'Vehicle driver', { optional: true })}\n                    {this.radio('Passenger', 'transportationInjury', 'Passenger', { optional: true })}\n                    {this.radio('Pedestrian', 'transportationInjury', 'Pedestrian', { optional: true })}\n                    {this.radio('Other', 'transportationInjury', 'Other', { optional: true })}\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n\n              <Form.Field>\n                <label>Address of Injury</label>\n              </Form.Field>\n              <Form.Group>\n                <Form.Field width={13}>\n                  <label>Street:</label>\n                  {this.input('text', 'locationOfInjuryStreet', { optional: true })}\n                </Form.Field>\n                <Form.Field width={3}>\n                  <label>Apt:</label>\n                  {this.input('text', 'locationOfInjuryApt', { optional: true })}\n                </Form.Field>\n              </Form.Group>\n              <Form.Group widths='equal'>\n                <Form.Field>\n                  <label>City:</label>\n                  {this.input('text', 'locationOfInjuryCity', { optional: true })}\n                </Form.Field>\n                <Form.Field>\n                  <label>County:</label>\n                  {this.input('text', 'locationOfInjuryCounty', { optional: true })}\n                </Form.Field>\n                <Form.Field>\n                  <label>State:</label>\n                  {this.input('text', 'locationOfInjuryState', { optional: true })}\n                </Form.Field>\n                <Form.Field>\n                  <label>Zip Code:</label>\n                  {this.input('text', 'locationOfInjuryZip', { optional: true })}\n                </Form.Field>\n              </Form.Group>\n\n              <Form.Field>\n                <label>Describe how injury occurred</label>\n              </Form.Field>\n              {this.textarea('howInjuryOccurred', { optional: true })}\n\n              {this.nextStepButton('ReviewAndSubmit')}\n\n            </Form>\n\n          </Grid.Column>\n        </Grid.Row>\n      </React.Fragment>\n    );\n  }\n\n}\n\nexport default InjuryQuestionsForm;\n","import _ from 'lodash';\nimport moment from 'moment';\nimport uuid from 'uuid/v4';\n\n// Infrastructure for creating FHIR death records based on the profile at\n// http://hl7.org/fhir/us/vrdr/2019May/\n\n// Utility functions\n// In the code below we rely on \"\" evaluating to false\n\nconst formatDateAndTime = (date, time) => {\n  if (date && time) {\n    return moment.utc(`${date} ${time}`, 'YYYY-MM-DD HH:mm').format();\n  } else if (date) {\n    return moment.utc(date, 'YYYY-MM-DD').format();\n  }\n}\n\n// Begin with classes to represent the core FHIR resources and types that are used to build a death record\n\nclass Resource {\n  constructor() {\n    this.id = uuid();\n  }\n  addExtension(extension) {\n    this.extension = this.extension || [];\n    this.extension.push(extension);\n  }\n  setProfile(profile) {\n    this.meta = { profile: [profile] };\n  }\n}\n\nclass Bundle extends Resource {\n  constructor() {\n    super();\n    this.resourceType = 'Bundle';\n  }\n  addEntry(resource) {\n    if (!resource) {\n      throw new Error('Error: addEntry called without a resource to add');\n    }\n    this.entry = this.entry || [];\n    const entry = {\n      fullUrl: `urn:uuid:${uuid()}`,\n      resource: resource\n    }\n    this.entry.push(entry);\n    return entry;\n  }\n}\n\nclass Composition extends Resource {\n  constructor() {\n    super();\n    this.resourceType = 'Composition';\n  }\n}\n\nclass Procedure extends Resource {\n  constructor() {\n    super();\n    this.resourceType = 'Procedure';\n  }\n}\n\nclass Condition extends Resource {\n  constructor(options = {}) {\n    super();\n    this.resourceType = 'Condition';\n    // Currently supports either code (TRANSAX format replacement) or text (IJE format replacement), not both\n    if (options.code) {\n      this.code = new CodeableConcept(options.code, 'http://hl7.org/fhir/sid/icd-10', null);\n    } else if (options.text) {\n      this.code = new CodeableConcept(null, null, options.text);\n    }\n  }\n  addDecedentReference(decedentEntry) {\n    this.subject = { reference: decedentEntry.fullUrl };\n  }\n  addPerformerReference(certifierEntry) {\n    this.asserter = { reference: certifierEntry.fullUrl };\n  }\n}\n\nclass Person extends Resource {\n  constructor(options = {}) {\n    super();\n    if (options.name) {\n      this.name = this.name || [];\n      this.name.push(new HumanName(options.name));\n    }\n    if (options.address) {\n      this.address = [new Address(options.address)];\n    }\n    if (options.qualification) {\n      const qualification = {};\n      if (options.qualification.identifier) {\n        qualification['identifier'] = [{ value: options.qualification.identifier }];\n      }\n      if (options.qualification.code) {\n        qualification['code'] = new CodeableConcept(options.qualification.code, 'http://hl7.org/fhir/v2/0360/2.7',\n                                                    options.qualification.text);\n      }\n      this.qualification = [qualification];\n    }\n  }\n}\n\nclass Practitioner extends Person {\n  constructor(options = {}) {\n    super(options);\n    this.resourceType = 'Practitioner';\n  }\n}\n\nclass PractitionerRole extends Resource {\n  constructor() {\n    super();\n    this.resourceType = 'PractitionerRole';\n  }\n}\n\nclass Patient extends Person {\n  constructor(options = {}) {\n    super(options);\n    this.resourceType = 'Patient';\n  }\n}\n\nclass Organization extends Resource {\n  constructor(options = {}) {\n    super();\n    this.resourceType = 'Organization';\n    if (options.name) {\n      this.name = options.name;\n    }\n    if (options.address) {\n      this.address = [new Address(options.address)];\n    }\n  }\n}\n\nclass List extends Resource {\n  constructor(options = {}) {\n    super();\n    this.resourceType = 'List';\n  }\n}\n\nclass RelatedPerson extends Person {\n  constructor(options = {}) {\n    super(options);\n    this.resourceType = 'RelatedPerson';\n  }\n  addDecedentReference(decedentEntry) {\n    this.patient = { reference: decedentEntry.fullUrl };\n  }\n}\n\nclass Observation extends Resource {\n  constructor(options = {}) {\n    super();\n    this.resourceType = 'Observation';\n    this.status = 'final';\n    this.code = new CodeableConcept(options.code, options.system, options.display);\n  }\n  addDecedentReference(decedentEntry) {\n    this.subject = { reference: decedentEntry.fullUrl };\n  }\n  addPerformerReference(certifierEntry) {\n    this.performer = [{ reference: certifierEntry.fullUrl }];\n  }\n  addLocationReference(locationEntry) {\n    const valueReference = { reference: locationEntry.fullUrl };\n    const url = locationEntry.resource.meta.profile[0];\n    this.addExtension({ url, valueReference });\n  }\n  addComponent(typeOptions, valueOptions) {\n    this.component = this.component || [];\n    const content = { code: new CodeableConcept(typeOptions.code, typeOptions.system, typeOptions.display) };\n    if (valueOptions.code) {\n      content['valueCodeableConcept'] = new CodeableConcept(valueOptions.code, valueOptions.system, valueOptions.display);\n    } else if (valueOptions.date) {\n      content['valueDateTime'] = formatDateAndTime(valueOptions.date, valueOptions.time);\n    } else if (valueOptions.text) {\n      content['valueString'] = valueOptions.text;\n    }\n    this.component.push(content);\n  }\n}\n\nclass Location extends Resource {\n  constructor(options = {}) {\n    super();\n    this.resourceType = 'Location';\n    if (options.name) {\n      this.name = options.name;\n    }\n    if (options.description) {\n      this.description = options.description;\n    }\n    if (options.address) {\n      this.address = new Address(options.address);\n    }\n    if (options.type) {\n      this.type = new CodeableConcept(options.type.code,\n                                      'http://hl7.org/fhir/ValueSet/v3-ServiceDeliveryLocationRoleType',\n                                      options.type.text);\n    }\n    if (options.physicalType) {\n      this.physicalType = new CodeableConcept(options.physicalType.code,\n                                              'http://hl7.org/fhir/ValueSet/location-physical-type',\n                                              options.physicalType.text);\n    }\n  }\n}\n\n// Helper classes for other FHIR concepts\n\nclass CodeableConcept {\n  constructor(code, system, display) {\n    if (code) {\n      if (system && display) {\n        this.coding = [{ system, code, display }];\n      } else if (system) {\n        this.coding = [{ system, code }];\n      } else if (display) {\n        this.coding = [{ code, display }];\n      } else {\n        this.coding = [{ code }];\n      }\n    }\n    if (display) {\n      this.text = display;\n    }\n  }\n}\n\nclass HumanName {\n  constructor(name, use) {\n    // Just does a simple decomposition for now\n    // TODO: This won't hold up to more complex examples with prefixes and suffixes\n    let match = name.match(/(.+)\\s+(\\S+)/);\n    if (match) {\n      this.given = match[1].split(/\\s+/);\n      this.family = match[2];\n    } else {\n      match = name.match(/\\S+/);\n      if (match) {\n        this.given = [match[0]];\n      }\n    }\n    this.use = 'official';\n  }\n}\n\nclass Address {\n  constructor(address) {\n    this.type = 'postal';\n    Object.assign(this, address);\n  }\n}\n\n// Classes to represent specific components of the death record\n\nclass DeathCertificateDocument extends Bundle {\n  constructor(options = {}) {\n\n    super();\n\n    this.type = 'document';\n\n    if (options.identifier) {\n      this.identifier = { value: options.identifier };\n    }\n\n    const [certificate] = this.createAndAddEntry(null, DeathCertificate, options.deathCertificate);\n\n    const [ , decedentEntry] = this.createAndAddEntry(certificate, Decedent, options.decedent);\n    if (decedentEntry) {\n      certificate.addDecedentReference(decedentEntry);\n    }\n\n    const [ , certifierEntry] = this.createAndAddEntry(certificate, Certifier, options.certifier)\n    if (certifierEntry) {\n      certificate.addPerformerReference(certifierEntry);\n    }\n\n    const [ , deathCertificationEntry] = this.createAndAddEntry(certificate, DeathCertification,\n                                                                options.deathCertification, null, certifierEntry)\n    if (deathCertificationEntry) {\n      certificate.addCertificationReference(deathCertificationEntry);\n    }\n\n    const [ , deathLocationEntry] = this.createAndAddEntry(certificate, DeathLocation, options.deathLocation);\n\n    const [ , morticianEntry] = this.createAndAddEntry(certificate, Mortician, options.mortician);\n\n    const [ , dispositionLocationEntry] = this.createAndAddEntry(certificate, DispositionLocation,\n                                                                 options.dispositionLocation);\n\n    const [ , funeralHomeEntry] = this.createAndAddEntry(certificate, FuneralHome, options.funeralHome);\n\n    this.createAndAddEntry(certificate, DecedentFather, options.decedentFather, decedentEntry);\n    this.createAndAddEntry(certificate, DecedentMother, options.decedentMother, decedentEntry);\n    this.createAndAddEntry(certificate, DecedentSpouse, options.decedentSpouse, decedentEntry);\n    this.createAndAddEntry(certificate, DecedentAge, options.decedentAge, decedentEntry);\n    this.createAndAddEntry(certificate, DecedentPregnancy, options.decedentPregnancy, decedentEntry);\n    this.createAndAddEntry(certificate, DecedentTransportationRole, options.decedentTransportationRole, decedentEntry);\n    this.createAndAddEntry(certificate, TobaccoUseContributedToDeath, options.tobaccoUseContributedToDeath, decedentEntry);\n    this.createAndAddEntry(certificate, DecedentEducationLevel, options.decedentEducationLevel, decedentEntry);\n    this.createAndAddEntry(certificate, DecedentEmploymentHistory, options.decedentEmploymentHistory, decedentEntry);\n    this.createAndAddEntry(certificate, BirthRecordIdentifier, options.birthRecordIdentifier, decedentEntry);\n    this.createAndAddEntry(certificate, MannerOfDeath, options.mannerOfDeath, decedentEntry, certifierEntry);\n    this.createAndAddEntry(certificate, AutopsyPerformedIndicator, options.autopsyPerformed, decedentEntry);\n    this.createAndAddEntry(certificate, ExaminerContacted, options.examinerContacted, decedentEntry);\n    this.createAndAddEntry(certificate, InterestedParty, options.interestedParty);\n    // TODO: The IG is unclear about whether Condition Contributing to Death points to certifier\n    // this.createAndAddEntry(certificate, ConditionContributingToDeath, options.conditionContributingToDeath,\n    //                        decedentEntry, certifierEntry);\n    this.createAndAddEntry(certificate, ConditionContributingToDeath, options.conditionContributingToDeath, decedentEntry);\n    this.createAndAddEntry(certificate, DeathDate, options.deathDate, decedentEntry, certifierEntry, deathLocationEntry);\n    this.createAndAddEntry(certificate, DeathPronouncementPerformer, options.deathPronouncementPerformer);\n    this.createAndAddEntry(certificate, InjuryIncident, options.injuryIncident, decedentEntry, deathLocationEntry);\n    this.createAndAddEntry(certificate, InjuryLocation, options.injuryLocation);\n    this.createAndAddEntry(certificate, DecedentDispositionMethod, options.decedentDispositionMethod,\n                           decedentEntry, morticianEntry, dispositionLocationEntry)\n\n    const [funeralHomeDirector] = this.createAndAddEntry(certificate, FuneralHomeDirector, options.funeralHomeDirector,\n                                                         null, morticianEntry);\n    if (funeralHomeDirector) {\n      funeralHomeDirector.addFuneralHomeReference(funeralHomeEntry);\n    }\n\n    const [causeOfDeathPathway] = this.createAndAddEntry(certificate, CauseOfDeathPathway, {}, null, certifierEntry)\n    if (options.causeOfDeathConditions) {\n      for (var causeOptions of options.causeOfDeathConditions) {\n        const [ , causeOfDeathConditionEntry] = this.createAndAddEntry(certificate, CauseOfDeathCondition,\n                                                                       causeOptions, decedentEntry, certifierEntry);\n        causeOfDeathPathway.addCauseOfDeathReference(causeOfDeathConditionEntry);\n      }\n    }\n\n    this.setProfile('http://hl7.org/fhir/us/vrdr/StructureDefinition/VRDR-Death-Certificate-Document')\n  }\n\n  // Many entries follow the same structure: instantiate a class with passed-in options, point the\n  // instance to the decedent and/or certifier, and add an entry for that instance\n  createAndAddEntry(certificate, klass, options, decedentEntry, performerEntry, locationEntry) {\n    if (!options) {\n      // If information for an entry is not provided to the API we just don't create the entry\n      return([null, null]);\n    }\n\n    const instance = new klass(options);\n    if (decedentEntry) {\n      instance.addDecedentReference(decedentEntry);\n    }\n    if (performerEntry) {\n      instance.addPerformerReference(performerEntry);\n    }\n    if (locationEntry) {\n      instance.addLocationReference(locationEntry);\n    }\n    const entry = this.addEntry(instance);\n    if (certificate) {\n      certificate.addSectionEntry(entry);\n    }\n    return([instance, entry]);\n  }\n}\n\nclass DeathCertificate extends Composition {\n  constructor(options = {}) {\n    super();\n    // TODO: do we want to check for missing required options?\n    if (options.identifier) {\n      this.identifier = { value: options.identifier };\n    }\n    this.setProfile('http://hl7.org/fhir/us/vrdr/StructureDefinition/VRDR-Death-Certificate');\n  }\n  addDecedentReference(decedentEntry) {\n    this.subject = { reference: decedentEntry.fullUrl };\n  }\n  addPerformerReference(certifierEntry) {\n    this.attester = [{ mode: ['legal'], party: { reference: certifierEntry.fullUrl } }];\n  }\n  addCertificationReference(certificationReference) {\n    const code = new CodeableConcept('103693007', 'http://snomed.info/sct', 'Diagnostic procedure');\n    this.event = [{ code: [code], detail: [{ reference: certificationReference.fullUrl }] }];\n  }\n  addSectionEntry(entry) {\n    this.section = this.section || [{ entry: [] }];\n    this.section[0].entry.push({ reference: entry.fullUrl });\n  }\n}\n\nclass DeathCertification extends Procedure {\n  constructor(options = {}) {\n    super();\n    this.setProfile('http://hl7.org/fhir/us/vrdr/StructureDefinition/VRDR-Death-Certification');\n    this.status = 'completed';\n    this.category = new CodeableConcept('103693007', 'http://snomed.info/sct', 'Diagnostic procedure');\n    this.code = new CodeableConcept('308646001', 'http://snomed.info/sct', 'Death certification');\n    this.performedDateTime = formatDateAndTime(options.performedDate, options.performedTime);\n  }\n  addPerformerReference(certifierEntry) {\n    this.performer = [{\n      role: new CodeableConcept('309343006', 'http://snomed.info/sct', 'Physician'),\n      actor: { reference: certifierEntry.fullUrl }\n    }];\n  }\n}\n\nclass Certifier extends Practitioner {\n  constructor(options = {}) {\n    super(options);\n    this.setProfile('http://hl7.org/fhir/us/vrdr/StructureDefinition/VRDR-Certifier');\n  }\n}\n\nclass Mortician extends Practitioner {\n  constructor(options = {}) {\n    super(options);\n    this.setProfile('http://hl7.org/fhir/us/vrdr/StructureDefinition/VRDR-Mortician');\n  }\n}\n\nclass Decedent extends Patient {\n  constructor(options = {}) {\n    super(options);\n    // Race\n    if (options.race) {\n      const extension = [];\n      // Race can handle either a single value or an array\n      const raceEntries = _.castArray(options.race);\n      // Only a single text extension is allowed, so concatenate the text from all the entries\n      const raceText = raceEntries.filter((e) => e.text).map((e) => e.text).join(' ')\n      if (raceText.length > 0) {\n        extension.push({ url: 'text', valueString: raceText });\n      }\n      for (var raceEntry of raceEntries.filter((e) => e.code)) {\n        const valueCoding = { system: 'urn:oid:2.16.840.1.113883.6.238', code: raceEntry.code, display: raceEntry.text };\n        extension.push({ url: raceEntry.type, valueCoding });\n      }\n      this.addExtension({ url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-race', extension });\n    }\n    // Ethnicity\n    if (options.ethnicity) {\n      const extension = [];\n      if (options.ethnicity.text) {\n        extension.push({ url: 'text', valueString: options.ethnicity.text });\n      }\n      if (options.ethnicity.code) {\n        const valueCoding = { system: 'urn:oid:2.16.840.1.113883.6.238', code: options.ethnicity.code };\n        if (options.ethnicity.text) {\n          valueCoding['display'] = options.ethnicity.text;\n        }\n        extension.push({ url: 'ombCategory', valueCoding });\n      }\n      this.addExtension({ url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity', extension });\n    }\n    // BirthSex\n    if (options.birthSex) {\n      this.addExtension({\n        url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex',\n        valueCodeableConcept: new CodeableConcept(options.birthSex, 'http://hl7.org/fhir/us/core/ValueSet/us-core-birthsex')\n      });\n    }\n    // BirthPlace\n    if (options.birthPlace) {\n      this.addExtension({\n        url: 'http://hl7.org/fhir/StructureDefinition/birthPlace',\n        valueAddress: options.birthPlace\n      });\n    }\n    // SSN\n    if (options.ssn) {\n      this.identifier = [{\n        type: new CodeableConcept('BR', null, 'Social Beneficiary Identifier'),\n        system: 'http://hl7.org/fhir/sid/us-ssn',\n        value: options.ssn\n      }];\n    }\n    // Gender\n    if (options.gender) {\n      this.gender = options.gender;\n    }\n    // BirthDate\n    if (options.birthDate) {\n      this.birthDate = formatDateAndTime(options.birthDate, null);\n    }\n    // MaritalStatus\n    if (options.maritalStatus) {\n      this.maritalStatus = new CodeableConcept(options.maritalStatus, 'http://hl7.org/fhir/vs/marital-status');\n    }\n  }\n}\n\nclass DecedentFather extends RelatedPerson {\n  constructor(options = {}) {\n    super(options);\n    this.setProfile('http://hl7.org/fhir/us/vrdr/StructureDefinition/VRDR-Decedent-Father');\n    this.relationship = new CodeableConcept('FTH');\n  }\n}\n\nclass DecedentMother extends RelatedPerson {\n  constructor(options = {}) {\n    super(options);\n    this.setProfile('http://hl7.org/fhir/us/vrdr/StructureDefinition/VRDR-Decedent-Mother');\n    this.relationship = new CodeableConcept('MTH');\n  }\n}\n\nclass DecedentSpouse extends RelatedPerson {\n  constructor(options = {}) {\n    super(options);\n    this.setProfile('http://hl7.org/fhir/us/vrdr/StructureDefinition/VRDR-Decedent-Spouse');\n    this.relationship = new CodeableConcept('SPS');\n  }\n}\n\nclass DecedentAge extends Observation {\n  constructor(options = {}) {\n    super({ code: '30525-0', system: 'http://loinc.org', display: 'Age' });\n    this.setProfile('http://hl7.org/fhir/us/vrdr/VRDR-Decedent-Age');\n    this.valueQuantity = {\n      unit: options.unit,\n      value: options.value\n    };\n    // TODO: This also has an effectiveDateTime, which is the date of death; this is duplicative information\n  }\n}\n\nclass DecedentPregnancy extends Observation {\n  constructor(options = {}) {\n    super({ code: '69442-2', system: 'http://loinc.org', display: 'Timing of recent pregnancy in relation to death' });\n    this.setProfile('http://hl7.org/fhir/us/vrdr/VRDR-Decedent-Pregnancy');\n    this.valueCodeableConcept = new CodeableConcept(options.code, 'http://hl7.org/fhir/stu3/valueset-PregnancyStatusVS', options.text);\n  }\n}\n\nclass DecedentTransportationRole extends Observation {\n  constructor(options = {}) {\n    super({ code: '69451-3', system: 'http://loinc.org', display: 'Transportation role of decedent' });\n    this.setProfile('http://hl7.org/fhir/us/vrdr/VRDR-Decedent-Transportation-Role');\n    this.valueCodeableConcept = new CodeableConcept(options.code,\n                                                    'http://hl7.org/fhir/ValueSet/TransportationRelationships',\n                                                    options.text);\n  }\n}\n\nclass FuneralHome extends Organization {\n  constructor(options = {}) {\n    super(options);\n    this.setProfile('http://hl7.org/fhir/us/vrdr/StructureDefinition/VRDR-Funeral-Home');\n    this.type = [new CodeableConcept('bus', null, 'Non-Healthcare Business or Corporation')];\n  }\n}\n\nclass FuneralHomeDirector extends PractitionerRole {\n  constructor(options = {}) {\n    super(options);\n    this.setProfile('http://hl7.org/fhir/us/vrdr/StructureDefinition/VRDR-Funeral-Home-Director');\n    // TODO: The code in the IG doesn't reference an appropriate value set\n  }\n  addPerformerReference(performerEntry) {\n    this.practitioner = { reference: performerEntry.fullUrl };\n  }\n  addFuneralHomeReference(funeralHomeEntry) {\n    this.organization = { reference: funeralHomeEntry.fullUrl };\n  }\n}\n\nclass InterestedParty extends Organization {\n  constructor(options = {}) {\n    super(options);\n    this.setProfile('http://hl7.org/fhir/us/vrdr/StructureDefinition/VRDR-Interested-Party');\n    if (options.identifier) {\n      this.identifier = [{ value: options.identifier }];\n    }\n    this.active = 'true'; // TODO: should this be settable?\n    if (options.typeCode) {\n      this.type = [new CodeableConcept(options.typeCode, 'http://hl7.org/fhir/ValueSet/organization-type', options.typeDisplay)];\n    }\n  }\n}\n\nclass CauseOfDeathPathway extends List {\n  constructor() {\n    super();\n    this.setProfile('http://hl7.org/fhir/us/vrdr/StructureDefinition/VRDR-Cause-of-Death-Pathway');\n    this.status = 'current';\n    this.mode = 'snapshot';\n    this.orderedBy = new CodeableConcept('priority');\n  }\n  addPerformerReference(certifierEntry) {\n    this.source = { reference: certifierEntry.fullUrl };\n  }\n  addCauseOfDeathReference(causeOfDeathEntry) {\n    this.entry = this.entry || [];\n    this.entry.push({ item: { reference: causeOfDeathEntry.fullUrl } });\n  }\n}\n\nclass CauseOfDeathCondition extends Condition {\n  constructor(options) {\n    super(options);\n    this.setProfile('http://hl7.org/fhir/us/vrdr/StructureDefinition/VRDR-Cause-of-Death-Condition');\n    if (options.interval) {\n      this.onsetString = options.interval;\n    }\n  }\n}\n\nclass ConditionContributingToDeath extends Condition {\n  constructor(options) {\n    super(options);\n    this.setProfile('http://hl7.org/fhir/us/vrdr/StructureDefinition/VRDR-Condition-Contributing-To-Death');\n  }\n}\n\nclass ExaminerContacted extends Observation {\n  constructor(options = {}) {\n    super({ code: '74497-9', system: 'http://loinc.org', display: 'Medical examiner or coroner was contacted' });\n    this.setProfile('http://hl7.org/fhir/us/vrdr/VRDR-Examiner-Contacted');\n    this.valueBoolean = options.value;\n  }\n}\n\nclass TobaccoUseContributedToDeath extends Observation {\n  constructor(options = {}) {\n    super({ code: '69443-0', system: 'http://loinc.org', display: 'Did tobacco use contribute to death' });\n    this.setProfile('http://hl7.org/fhir/us/vrdr/VRDR-Tobacco-Use-Contributed-To-Death');\n    this.valueCodeableConcept = new CodeableConcept(options.code, 'http://hl7.org/fhir/ValueSet/v2-0532', options.text);\n  }\n}\n\nclass DecedentEducationLevel extends Observation {\n  constructor(options = {}) {\n    super({ code: '80913-7', system: 'http://loinc.org', display: 'Highest level of education' });\n    this.setProfile('http://hl7.org/fhir/us/vrdr/VRDR-Decedent-Education-Level');\n    this.valueCodeableConcept = new CodeableConcept(options.code, 'http://www.hl7.org/fhir/ValueSet/v3-EducationLevel', options.text);\n  }\n}\n\nclass DecedentEmploymentHistory extends Observation {\n  constructor(options = {}) {\n    super({ code: '74165-2', system: 'http://loinc.org', display: 'History of employment status' });\n    this.setProfile('http://hl7.org/fhir/us/vrdr/VRDR-Decedent-Employment-History');\n    if (options.militaryService) {\n      this.addComponent({ code: '55280-2', system: 'http://loinc.org', display: 'Military service Narrative' },\n                        { code: options.militaryService.code, system: 'http://hl7.org/fhir/ValueSet/v2-0532',\n                          display: options.militaryService.text });\n    }\n    if (options.usualIndustry) {\n      this.addComponent({ code: '21844-6', system: 'http://loinc.org', display: 'History of Usual industry' },\n                        { code: options.usualIndustry.code, system: 'http://hl7.org/fhir/ValueSet/industry-cdc-census-2010',\n                          display: options.usualIndustry.text });\n    }\n    if (options.usualOccupation) {\n      this.addComponent({ code: '21847-9', system: 'http://loinc.org', display: 'Usual occupation Narrative' },\n                        { code: options.usualOccupation.code, system: 'http://hl7.org/fhir/ValueSet/Usual-occupation',\n                          display: options.usualOccupation.text });\n    }\n  }\n}\n\nclass BirthRecordIdentifier extends Observation {\n  constructor(options = {}) {\n    super({ code: 'BR', system: 'urn:oid:2.16.840.1.113883.6.290', display: 'Birth Record' });\n    this.setProfile('http://hl7.org/fhir/us/vrdr/VRDR-Birth-Record-Identifier');\n    this.valueString = options.certificateNumber;\n    if (options.birthYear) {\n      this.addComponent({ code: '21112-8', system: 'http://loinc.org', display: 'Birth date' },\n                        { date: options.birthYear });\n    }\n    if (options.birthState) {\n      this.addComponent({ code: '21842-0', system: 'http://loinc.org', display: 'Birthplace' },\n                        { code: options.birthState, system: 'ISO 3166-2' });\n    }\n  }\n}\n\nclass MannerOfDeath extends Observation {\n  constructor(options = {}) {\n    super({ code: '69449-7', system: 'http://loinc.org', display: 'Manner of death' });\n    this.setProfile('http://hl7.org/fhir/us/vrdr/VRDR-Manner-of-Death');\n    this.valueCodeableConcept = new CodeableConcept(options.code, 'http://hl7.org/fhir/stu3/valueset-MannerTypeVS', options.text);\n  }\n}\n\nclass InjuryIncident extends Observation {\n  constructor(options = {}) {\n    super({ code: '11374-6', system: 'http://loinc.org', display: 'Injury incident description' });\n    this.setProfile('http://hl7.org/fhir/us/vrdr/VRDR-Injury-Incident');\n    this.valueString = options.text;\n    if (options.effectiveDate) {\n      this.effectiveDateTime = formatDateAndTime(options.effectiveDate, options.effectiveTime);\n    }\n    if (options.placeOfInjury) {\n      this.addComponent({ code: '69450-5', system: 'http://loinc.org', display: 'Place of injury' },\n                        { text: options.placeOfInjury });\n    }\n    if (options.transportationEventIndicator) {\n      this.addComponent({ code: '69448-9', system: 'http://loinc.org',\n                          display: 'Injury leading to death associated with transportation event' },\n                        { code: options.transportationEventIndicator.code, system: 'http://hl7.org/fhir/ValueSet/v2-0532',\n                          display: options.transportationEventIndicator.text });\n    }\n    if (options.workInjuryIndicator) {\n      this.addComponent({ code: '69444-8', system: 'http://loinc.org', display: 'Injury at work?' },\n                        { code: options.workInjuryIndicator.code, system: 'http://hl7.org/fhir/ValueSet/v2-0532',\n                          display: options.workInjuryIndicator.text });\n    }\n  }\n}\n\nclass InjuryLocation extends Location {\n  constructor(options = {}) {\n    super(options);\n    this.setProfile('http://hl7.org/fhir/us/vrdr/VRDR-Injury-Location');\n  }\n}\n\nclass AutopsyPerformedIndicator extends Observation {\n  constructor(options = {}) {\n    super({ code: '85699-7', system: 'http://loinc.org', display: 'Autopsy was performed' });\n    this.setProfile('http://hl7.org/fhir/us/vrdr/VRDR-Autopsy-Performed-Indicator');\n    this.valueCodeableConcept = new CodeableConcept(options.code, 'http://hl7.org/fhir/ValueSet/v2-0532', options.text);\n    if (options.autopsyAvailable) {\n      this.addComponent({ code: '69436-4', system: 'http://loinc.org', display: 'Autopsy results available' },\n                        { code: options.autopsyAvailable.code, system: 'http://hl7.org/fhir/ValueSet/v2-0532',\n                          display: options.autopsyAvailable.text });\n    }\n  }\n}\n\nclass DeathLocation extends Location {\n  constructor(options = {}) {\n    super(options);\n    this.setProfile('http://hl7.org/fhir/us/vrdr/VRDR-Death-Location');\n  }\n}\n\nclass DeathDate extends Observation {\n  constructor(options = {}) {\n    super({ code: '81956-5', system: 'http://loinc.org', display: 'Date and time of death' });\n    this.setProfile('http://hl7.org/fhir/us/vrdr/VRDR-Death-Date');\n    if (options.effectiveDate) {\n      this.effectiveDateTime = formatDateAndTime(options.effectiveDate, options.effectiveTime);\n    }\n    if (options.comment) {\n      this.comment = options.comment;\n    }\n    if (options.method) {\n      this.method = new CodeableConcept(options.method.code, 'http://snomed.info/sct', options.method.text)\n    }\n    if (options.pronouncedDate) {\n      this.addComponent({ code: '80616-6', system: 'http://loinc.org', display: 'Date and time pronounced dead' },\n                        { date: options.pronouncedDate, time: options.pronouncedTime });\n    }\n  }\n}\n\nclass DeathPronouncementPerformer extends Practitioner {\n  constructor(options = {}) {\n    super(options);\n    this.setProfile('http://hl7.org/fhir/us/vrdr/VRDR-Death-Pronouncement-Performer');\n  }\n}\n\nclass DispositionLocation extends Location {\n  constructor(options = {}) {\n    super(options);\n    this.setProfile('http://hl7.org/fhir/us/vrdr/VRDR-Disposition-Location');\n  }\n}\n\nclass DecedentDispositionMethod extends Observation {\n  constructor(options = {}) {\n    super({ code: '80905-3', system: 'http://loinc.org', display: 'Body disposition method' });\n    this.setProfile('http://hl7.org/fhir/us/vrdr/VRDR-Decedent-Disposition-Method');\n    this.valueCodeableConcept = new CodeableConcept(options.code, 'http://hl7.org/fhir/stu3/DispositionTypeVS', options.text);\n  }\n}\n\nexport { DeathCertificateDocument };\n","import moment from 'moment';\nimport _ from 'lodash';\nimport { DeathCertificateDocument } from './FHIRExport';\n\n// Utility functions\n\nfunction formatAddress(street, city, district, state, postalCode) {\n  const address = {};\n  if (street) {\n    address.line = [street];\n  }\n  if (city) {\n    address.city = city;\n  }\n  if (district) {\n    address.district = district;\n  }\n  if (state) {\n    address.state = state;\n  }\n  if (postalCode) {\n    address.postalCode = postalCode;\n  }\n  return (address);\n}\n\n// TODO: Some of these code lookups could share code\n\nfunction yesNoToCode(text) {\n  const lookup = {\n    'Yes': 'Y',\n    'No': 'N'\n  }\n  const code = lookup[text];\n  if (code) {\n    return { code, text };\n  } else {\n    return null;\n  }\n}\n\nfunction yesNoToBoolean(text) {\n  const lookup = {\n    'Yes': 'true',\n    'No': 'false'\n  }\n  return lookup[text];\n}\n\nfunction mannerOfDeathToCode(text) {\n  const lookup = {\n    'Natural': '38605008',\n    'Accident': '7878000',\n    'Suicide': '44301001',\n    'Homicide': '27935005',\n    'Pending Investigation': '185973002',\n    'Could not be determined': '65037004'\n  }\n  const code = lookup[text];\n  if (code) {\n    return { code, text };\n  } else {\n    return null;\n  }\n}\n\nfunction pregnancyToCode(text) {\n  const lookup = {\n    'Not pregnant within past year': 'PHC1260',\n    'Pregnant at time of death': 'PHC1261',\n    'Not pregnant, but pregnant within 42 days of death': 'PHC1262',\n    'Not pregnant, but pregnant 43 days to 1 year before death': 'PHC1263',\n    'Unknown if pregnant within the past year': 'PHC1264'\n  }\n  const code = lookup[text];\n  if (code) {\n    return { code, text };\n  } else {\n    return null;\n  }\n}\n\nfunction transportationRoleToCode(text) {\n  const lookup = {\n    'Vehicle driver': '236320001',\n    'Passenger': '257500003',\n    'Pedestrian': '257518000',\n    'Other': 'OTH'\n  }\n  const code = lookup[text];\n  if (code) {\n    return { code, text };\n  } else {\n    return null;\n  }\n}\n\nfunction appendCOD(array, text, interval) {\n  if (text && interval) {\n    array.push({ text, interval });\n  } else if (text) {\n    array.push({ text });\n  }\n}\n\n// Given the data structure used to store document state (the \"record\" object defined in App.js) and a FHIR\n// patient record, produce a FHIR VRDR mortality record for the decedent\n\nfunction recordAndPatientToFHIR(model, patient) {\n\n  // TODO: Consider using this \"options\" structure as the application's internal data structure, and adding\n  // convenience methods for setting/getting (perhaps through redux)\n\n  // TODO: I think we need this intermediary structure because of cross-referencing that needs to happen when\n  // the FHIR structure is being built, but we should explore if the underlying FHIR structure can simply be\n  // built with these convenience methods\n\n  const options = {};\n\n  options.deathCertificate = {};\n\n  options.deathCertification = {\n    performedDate: moment().format('YYYY-MM-DD'),\n    performedTime: moment().format('HH:mm')\n  };\n\n  if (model.certifierName) {\n    options.certifier = {\n      name: model.certifierName,\n      address: formatAddress(model.certifierStreet, model.certifierCity, model.certifierCounty,\n                             model.certifierState, model.certifierZip)\n    }\n  }\n\n  if (patient) {\n    options.decedent = {\n      name: patient.name,\n      birthPlace: patient.resource.birthPlace,\n      gender: patient.resource.gender,\n      birthDate: patient.resource.birthDate,\n      maritalStatus: _.get(patient, 'resource.maritalStatus.coding[0].code')\n      //ethnicity: { text: 'Not Hispanic or Latino', code: '2186-5' },\n      //race: [\n      //  { type: 'ombCategory', text: 'White', code: '2106-3' },\n      //  { type: 'detailed', text: 'French', code: '2111-3' }\n      //]\n    }\n  }\n\n  // decedentAge: {\n  //   unit: 'a', // Years\n  //   value: '97'\n  // },\n\n  if (model.pregnancy) {\n    options.decedentPregnancy = pregnancyToCode(model.pregnancy);\n  }\n\n  if (model.tobacco) {\n    // TODO: The IG doesn't have a value set for this, just support Y and N for now\n    options.tobaccoUseContributedToDeath = yesNoToCode(model.tobacco);\n  }\n\n  // decedentEducationLevel: {\n  //   code: 'GD',\n  //   text: 'Graduate or professional Degree complete'\n  // },\n  // decedentEmploymentHistory: {\n  //   militaryService: {\n  //     code: 'Y',\n  //     text: 'Yes'\n  //   },\n  //   usualIndustry: {\n  //     code: '1320',\n  //     text: 'Aerospace engineers'\n  //   },\n  //   usualOccupation: {\n  //     code: '7280',\n  //     text: 'Accounting, tax preparation, bookkeeping, and payroll services'\n  //   }\n  // },\n  // birthRecordIdentifier: {\n  //   certificateNumber: '2208471975',\n  //   birthYear: '1915',\n  //   birthState: 'MA'\n  // },\n\n  if (model.mannerOfDeath) {\n    options.mannerOfDeath = mannerOfDeathToCode(model.mannerOfDeath);\n  }\n\n  if (model.autopsyPerformed) {\n    options.autopsyPerformed = yesNoToCode(model.autopsyPerformed);\n    if (model.autopsyAvailable) {\n      options.autopsyPerformed.autopsyAvailable = yesNoToCode(model.autopsyAvailable);\n    }\n  }\n\n  if (model.placeOfDeathName) {\n    options.deathLocation = {\n      name: model.placeOfDeathName,\n      // TODO: currently ignores placeOfDeathApt\n      address: formatAddress(model.placeOfDeathStreet, model.placeOfDeathCity, model.placeOfDeathCounty,\n                             model.placeOfDeathStat, model.placeOfDeathZip),\n      // TODO: These will likely change in the standard, so we'll hard code for now\n      // TODO: This ignores the \"Place of Death Type\" in the form\n      type: {\n        code: 'HOSP',\n        text: 'Hospital'\n      },\n      physicalType: {\n        code: 'wa',\n        text: 'Ward'\n      }\n    }\n  }\n\n  if (model.actualDeathDate) {\n    options.deathDate = {\n      effectiveDate: model.actualDeathDate,\n      effectiveTime: model.actualDeathTime,\n      method: {\n        code: '414135002',\n        text: 'Estimated'\n      },\n    }\n  }\n  if (model.pronouncedDeathDate) {\n    options.deathDate = options.deathDate || {};\n    options.deathDate.pronouncedDate = model.pronouncedDeathDate;\n    options.deathDate.pronouncedTime = model.pronouncedDeathTime;\n  }\n\n  // deathPronouncementPerformer: {\n  //   name: 'Death Pronouncer',\n  //   qualification: {\n  //     identifier: '4041603882',\n  //     code: 'MD',\n  //     text: 'Doctor of Medicine'\n  //   }\n  // },\n\n  if (model.transportationInjury) {\n    options.decedentTransportationRole = transportationRoleToCode(model.transportationInjury);\n  }\n\n  if (model.dateOfInjury) {\n    debugger\n    options.injuryIncident = {\n      // TODO: Form doesn't include the text\n      // text: 'Example injury description text',\n      effectiveDate: model.dateOfInjury,\n      effectiveTime: model.timeOfInjury\n    }\n    if (model.placeOfInjury) {\n      options.injuryIncident.placeOfInjury = model.placeOfInjury;\n    }\n    if (model.injuryAtWork) {\n      options.workInjuryIndicator = yesNoToCode(model.injuryAtWork);\n    }\n    // We use the presence of specific transportation info to determine yes or no\n    options.transportationEventIndicator = yesNoToCode(model.transportationInjury ? 'Yes' : 'No');\n  }\n\n  if (model.howInjuryOccurred) {\n    options.injuryLocation = {\n      // TODO: Form doesn't include name of location\n      // name: 'restaurant',\n      description: model.howInjuryOccurred\n    }\n  }\n\n  // TODO: Better handling of partial addresses\n  if (model.locationOfInjuryState) {\n    options.injuryLocation = options.injuryLocation || {};\n    // TODO: Currently ignores placeOfDeathApt\n    options.injuryLocation.address = formatAddress(model.locationOfInjuryStreet, model.locationOfInjuryCity, model.locationOfInjuryCounty,\n                                                   model.locationOfInjuryState, model.placeOfDeathZip);\n    // TODO: Form doesn't support type or physical type\n    //   type: {\n    //     code: 'PTRES',\n    //     text: 'Patient\\'s Residence'\n    //   },\n    //   physicalType: {\n    //     code: 'ro',\n    //     text: 'Room'\n    //   }\n  }\n\n  // mortician: {\n  //   name: 'Jim Mortician',\n  //   qualification: {\n  //     identifier: '3522912928'\n  //   }\n  // },\n  // funeralHome: {\n  //   name: 'Funerals by Jim',\n  //   address: {\n  //     line: [\n  //       '145 Hamill Mountains'\n  //     ],\n  //     city: 'Milford',\n  //     district: 'Worcester',\n  //     state: 'Massachusetts',\n  //     country: 'United States'\n  //   }\n  // },\n  // funeralHomeDirector: {\n  // },\n  // dispositionLocation: {\n  //   name: 'Harber Cemetery',\n  //   address: {\n  //     city: 'Mount Bowdoin',\n  //     district: 'Suffolk',\n  //     state: 'Massachusetts',\n  //     country: 'United States'\n  //   }\n  // },\n  // decedentDispositionMethod: {\n  //   code: '449971000124106',\n  //   text: 'Burial'\n  // },\n  // interestedParty: {\n  //   identifier: '8032275691',\n  //   typeCode: 'prov',\n  //   typeDisplay: 'Healthcare Provider',\n  //   name: 'The Healthcare Company',\n  //   address: {\n  //     line: [\n  //       '839 Barrett Shoals'\n  //     ],\n  //     city: 'Norfolk Downs',\n  //     district: 'Norfolk',\n  //     state: 'Massachusetts',\n  //     country: 'United States'\n  //   }\n  // },\n  \n  const causeOfDeathConditions = [];\n  appendCOD(causeOfDeathConditions, model.cod1Text, model.cod1Time);\n  appendCOD(causeOfDeathConditions, model.cod2Text, model.cod2Time);\n  appendCOD(causeOfDeathConditions, model.cod3Text, model.cod3Time);\n  appendCOD(causeOfDeathConditions, model.cod4Text, model.cod4Time);\n  if (causeOfDeathConditions.length > 0) {\n    options.causeOfDeathConditions = causeOfDeathConditions;\n  }\n\n  if (model.contributing) {\n    options.conditionContributingToDeath = {\n      text: model.contributing\n    }\n  }\n\n  if (model.examinerContacted) {\n    options.examinerContacted = {\n      value: yesNoToBoolean(model.examinerContacted)\n    }\n  }\n\n  return (new DeathCertificateDocument(options));\n}\n\nexport { recordAndPatientToFHIR };\n","import React from 'react';\nimport { Grid, Message, Form, Button, Input } from 'semantic-ui-react';\nimport FormPage from './FormPage';\nimport { recordAndPatientToFHIR } from './RecordAndPatientToFHIR';\nimport StateStorage from './StateStorage';\n// jQuery for AJAX is overkill, but it's already a dependency\nimport jQuery from 'jquery';\n\nclass ReviewAndSubmit extends FormPage {\n\n  constructor(props) {\n    super(props);\n    // See if we have state from previous use stored in local browser storage\n    const defaultState = { edrsEndpoint: 'http://localhost:4000/fhir/v1/death_records.json' };\n    this.state = StateStorage.retrieveState('stateReviewAndSubmit', defaultState);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    // Store state in local browser storage to preserve between uses\n    this.setState({ [target.name]: target.value }, () => StateStorage.storeState('stateReviewAndSubmit', this.state));\n  }\n\n  handleSubmit() {\n    const fhirData = recordAndPatientToFHIR(this.props.record, this.props.patient);\n    const ajaxParams = {\n      url: this.state.edrsEndpoint,\n      type: 'POST',\n      data: JSON.stringify(fhirData),\n      contentType: 'application/json',\n      dataType: 'json',\n      success: (data) => {\n        alert('Successfully submitted data to server');\n      },\n      error: (response) => {\n        if (response.status === 201) {\n          // jQuery handles a 201 code as an error if the response body is blank (it's expecting JSON)\n          alert('Successfully submitted data to server');\n        } else {\n          alert(\"Failed to submit data to server, error reported: \" + response.statusText);\n        }\n      }\n    }\n    // Support an optional bearer token if specified\n    if (this.state.bearerToken) {\n      // TODO: Determine which of these is actually the correct way to do it\n      ajaxParams.beforeSend = (xhr, settings) => { xhr.setRequestHeader('Authorization', 'Bearer ' + this.state.bearerToken); };\n      ajaxParams.headers = { 'Authorization': 'Bearer ' + this.state.bearerToken };\n    }\n    jQuery.ajax(ajaxParams);\n  }\n\n  render() {\n\n    const record = this.props.record;\n\n    const reviewRow = (title, value) => {\n      return (\n        <Grid.Row>\n          <Grid.Column width={4}>\n            <div className='review-title'>{title}</div>\n          </Grid.Column>\n          <Grid.Column width={12}>\n            <Message content={value} />\n          </Grid.Column>\n        </Grid.Row>\n      );\n    };\n\n    // TODO: Combine some of these lines, such as addresses\n\n    return (\n      <React.Fragment>\n\n        <Grid.Row>\n          {this.menu('ReviewAndSubmit')}\n        </Grid.Row>\n\n        <Grid.Row>\n          <Grid.Column>\n            <Grid>\n              {reviewRow('Date Pronounced Dead', record.pronouncedDeathDate)}\n              {reviewRow('Time Pronounced Dead', record.pronouncedDeathTime)}\n              {reviewRow('Actual or Presumed Date of Death', record.actualDeathDate)}\n              {reviewRow('Actual or Presumed Time of Death', record.actualDeathTime)}\n              {reviewRow('Was Medical Examiner or Coroner Contacted?', record.examinerContacted)}\n              {reviewRow('Was an Autopsy Performed?', record.autopsyPerformed)}\n              {reviewRow('Were Autopsy Findings Available to Complete the Cause of Death?', record.autopsyAvailable)}\n              {reviewRow('Name of Place of Death', record.placeOfDeathName)}\n              {reviewRow('Type of Place of Death', record.placeOfDeathType)}\n              {reviewRow('Place of Death (State)', record.placeOfDeathState)}\n              {reviewRow('Place of Death (County)', record.placeOfDeathCounty)}\n              {reviewRow('Place of Death (City)', record.placeOfDeathCity)}\n              {reviewRow('Place of Death (Street)', record.placeOfDeathStreet)}\n              {reviewRow('Place of Death (Apt)', record.placeOfDeathApt)}\n              {reviewRow('Place of Death (Zip)', record.placeOfDeathZip)}\n              {reviewRow('Person Pronouncing Death', record.pronouncerName)}\n              {reviewRow('License Number of Person Pronouncing Death', record.pronouncerNumber)}\n              {reviewRow('Immediate Cause of Death', record.cod1Text)}\n              {reviewRow('Approximate Interval', record.cod1Time)}\n              {reviewRow('Underlying Cause of Death', record.cod2Text)}\n              {reviewRow('Approximate Interval', record.cod2Time)}\n              {reviewRow('Underlying Cause of Death', record.cod3Text)}\n              {reviewRow('Approximate Interval', record.cod3Time)}\n              {reviewRow('Underlying Cause of Death', record.cod4Text)}\n              {reviewRow('Approximate Interval', record.cod4Time)}\n              {reviewRow('Other Significant Conditions Contributing to Death', record.contributing)}\n              {reviewRow('Did Tobacco Use Contribute to Death?', record.tobacco)}\n              {reviewRow('Pregnancy Status', record.pregnancy)}\n              {reviewRow('Manner of Death', record.mannerOfDeath)}\n              {reviewRow('Date of Injury', record.dateOfInjury)}\n              {reviewRow('Time of Injury', record.timeOfInjury)}\n              {reviewRow('Place of Injury', record.placeOfInjury)}\n              {reviewRow('Injury at Work?', record.injuryAtWork)}\n              {reviewRow('Location of Injury (State)', record.locationOfInjuryState)}\n              {reviewRow('Location of Injury (County)', record.locationOfInjuryCounty)}\n              {reviewRow('Location of Injury (City)', record.locationOfInjuryCity)}\n              {reviewRow('Location of Injury (Street)', record.locationOfInjuryStreet)}\n              {reviewRow('Location of Injury (Apt)', record.locationOfInjuryApt)}\n              {reviewRow('Location of Injury (Zip)', record.locationOfInjuryZip)}\n              {reviewRow('Describe how injury occurred', record.howInjuryOccurred)}\n            </Grid>\n\n          </Grid.Column>\n        </Grid.Row>\n\n        <Grid.Row>\n          <Grid.Column>\n            <Form>\n\n              <Form.Group widths='equal'>\n                <Form.Field>\n                  <label>Certifier Name:</label>\n                  {this.input('text', 'certifierName')}\n                </Form.Field>\n                <Form.Field>\n                  <label>Certifier License Number:</label>\n                  {this.input('text', 'certifierNumber')}\n                </Form.Field>\n              </Form.Group>\n              <Form.Field>\n                <label>Address of Certifier</label>\n              </Form.Field>\n              <Form.Group>\n                <Form.Field width={16}>\n                  <label>Street:</label>\n                  {this.input('text', 'certifierStreet')}\n                </Form.Field>\n              </Form.Group>\n              <Form.Group widths='equal'>\n                <Form.Field>\n                  <label>City:</label>\n                  {this.input('text', 'certifierCity')}\n                </Form.Field>\n                <Form.Field>\n                  <label>County:</label>\n                  {this.input('text', 'certifierCounty')}\n                </Form.Field>\n                <Form.Field>\n                  <label>State:</label>\n                  {this.input('text', 'certifierState')}\n                </Form.Field>\n                <Form.Field>\n                  <label>Zip Code:</label>\n                  {this.input('text', 'certifierZip')}\n                </Form.Field>\n              </Form.Group>\n\n              <Form.Field>\n                <label>Bearer Token (optional):</label>\n                <Input type='text' name='bearerToken' value={this.state.bearerToken} onChange={this.handleChange} />\n              </Form.Field>\n\n              <Form.Field>\n                <label>EDRS FHIR Endpoint URL:</label>\n                <Input type='text' name='edrsEndpoint' value={this.state.edrsEndpoint} onChange={this.handleChange} />\n              </Form.Field>\n\n              <Button primary floated='right' onClick={this.handleSubmit}>Submit</Button>\n              <Button primary floated='right' onClick={() => console.log(JSON.stringify(recordAndPatientToFHIR(this.props.record, this.props.patient), null, 2))}>Log FHIR to Console</Button>\n              <Button primary floated='right' as='a' href={\"data: text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(recordAndPatientToFHIR(this.props.record, this.props.patient), null, 2))} download=\"fhir-bundle.json\">Download FHIR Bundle</Button>\n            </Form>\n          </Grid.Column>\n        </Grid.Row>\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ReviewAndSubmit;\n","import React, { Component } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport Header from './Header';\nimport PatientCard from './PatientCard';\nimport Welcome from './Welcome';\nimport StandalonePatientSearch from './StandalonePatientSearch';\nimport PronounceForm from './PronounceForm';\nimport CauseOfDeathForm from './CauseOfDeathForm';\nimport AdditionalQuestionsForm from './AdditionalQuestionsForm';\nimport InjuryQuestionsForm from './InjuryQuestionsForm';\nimport ReviewAndSubmit from './ReviewAndSubmit';\nimport { SMARTWrap } from './FHIRClientWrapper';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    const record = {\n      pronouncedDeathDate: '',\n      pronouncedDeathTime: '',\n      actualDeathDate: '',\n      actualDeathTime: '',\n      examinerContacted: null,\n      autopsyPerformed: null,\n      autopsyAvailable: null,\n      placeOfDeathState: '',\n      placeOfDeathCounty: '',\n      placeOfDeathCity: '',\n      placeOfDeathStreet: '',\n      placeOfDeathApt: '',\n      placeOfDeathZip: '',\n      placeOfDeathName: '',\n      placeOfDeathType: '',\n      pronouncerName: '',\n      pronouncerNumber: '',\n      certifierName: '',\n      certifierNumber: '',\n      certifierStreet: '',\n      certifierCity: '',\n      certifierCounty: '',\n      certifierState: '',\n      certifierZip: '',\n      certifiedDate: '',\n      cod1Text: '',\n      cod1Time: '',\n      cod2Text: '',\n      cod2Time: '',\n      cod3Text: '',\n      cod3Time: '',\n      cod4Text: '',\n      cod4Time: '',\n      contributing: '',\n      tobacco: null,\n      pregnancy: null,\n      mannerOfDeath: null,\n      dateOfInjury: '',\n      timeOfInjury: '',\n      placeOfInjury: '',\n      injuryAtWork: null,\n      transportationInjury: null,\n      howInjuryOccurred: '',\n      locationOfInjuryState: '',\n      locationOfInjuryCounty: '',\n      locationOfInjuryCity: '',\n      locationOfInjuryStreet: '',\n      locationOfInjuryApt: '',\n      locationOfInjuryZip: ''\n    };\n    // First page depends on whether we're running in a SMART on FHIR context or not\n    if (props.smart) {\n      this.state = { step: 'Pronouncing', record: record, selectedConditions: [] };\n    } else if (props.standalone) {\n      this.state = { step: 'StandalonePatientSearch', record: record, selectedConditions: [] };\n    } else {\n      this.state = { step: 'Welcome', record: record, selectedConditions: [] };\n    }\n    this.setPatient = this.setPatient.bind(this);\n    this.setUser = this.setUser.bind(this);\n    this.setResources = this.setResources.bind(this);\n    this.gotoStep = this.gotoStep.bind(this);\n    this.handleRecordChange = this.handleRecordChange.bind(this);\n    this.handleConditionClick = this.handleConditionClick.bind(this);\n  }\n\n  componentDidMount() {\n    // If we're running in a SMART on FHIR context, load the patient and all resources\n    if (this.props.smart) {\n      SMARTWrap.load().then(([user, patient, conditions, medications, procedures, observations]) => {\n        this.setUser(user);\n        this.setPatient(patient);\n        this.setResources(conditions, medications, procedures, observations);\n      });\n    }\n  }\n\n  setPatient(patient) {\n    this.setState({ patient });\n    // Pull information on decedent from patient to populate fields\n    this.setState((prevState) => {\n      const newRecord = Object.assign({}, prevState.record);\n      if (patient.deceasedDate) {\n        newRecord.actualDeathDate = patient.deceasedDate;\n      }\n      if (patient.deceasedTime) {\n        newRecord.actualDeathTime = patient.deceasedTime;\n      }\n      return ({ record: newRecord });\n    });\n  }\n\n  setUser(user) {\n    this.setState({ user });\n    // Pull information on certifier from user to populate fields\n    this.setState((prevState) => {\n      const newRecord = Object.assign({}, prevState.record);\n      newRecord.certifierName = user.name;\n      newRecord.certifierStreet = user.street;\n      newRecord.certifierCity = user.city;\n      newRecord.certifierState = user.state;\n      newRecord.certifierZip = user.zip;\n      return ({ record: newRecord });\n    });\n  }\n\n  setResources(conditions, medications, procedures, observations) {\n    this.setState({ conditions, medications, procedures, observations });\n  }\n\n  gotoStep(newStep) {\n    this.setState({ step: newStep });\n  }\n\n  updateRecord(field, value) {\n    this.setState((prevState) => {\n      const newRecord = Object.assign({}, prevState.record);\n      newRecord[field] = value;\n      return ({ record: newRecord });\n    });\n  }\n\n  handleRecordChange(event, data) {\n    this.updateRecord(data.name, data.value);\n  }\n\n  // Add/remove a condition from the patient record to/from the death record\n  // TODO: We'll want an interface that allows text to be edited, condition order to be changed, conditions to be added manually, etc\n  // TODO: This is getting long, we should refactor into additional functions\n  handleConditionClick(event, data) {\n    event.preventDefault();\n    const clickedCondition = this.state.conditions.find((condition) => condition.id === data.id);\n    // First update our internal conditions state, adding or subtracting as needed and sorting by onset\n    let newConditions = this.state.selectedConditions.slice(); // Create a new copy of the array\n    if (newConditions.some((condition) => condition.id === clickedCondition.id)) {\n      newConditions = newConditions.filter((condition) => condition.id !== clickedCondition.id);\n    } else {\n      newConditions.push(clickedCondition);\n      newConditions = _.sortBy(newConditions, (condition) => moment(condition.startDate)).reverse();\n    }\n    this.setState({ selectedConditions: newConditions });\n    // Then update the user display of the conditions\n    for (let i = 0; i < 4; i++) {\n      if (newConditions[i]) {\n        const text = newConditions[i].description;\n        // Use user or record supplied death time if available, otherwise current time\n        let startDateTime = null;\n        if (this.state.record.actualDeathDate) {\n          startDateTime = moment(`${this.state.record.actualDeathDate} ${this.state.record.actualDeathTime}`);\n        }\n        startDateTime = startDateTime || moment().format('YYYY-MM-DD HH:mm');\n        const onset = moment(newConditions[i].startDate).from(startDateTime, true);\n        this.updateRecord(`cod${i+1}Text`, text);\n        this.updateRecord(`cod${i+1}Time`, onset);\n      } else {\n        this.updateRecord(`cod${i+1}Text`, '');\n        this.updateRecord(`cod${i+1}Time`, '');\n      }\n    }\n  }\n\n  render() {\n\n    const renderStep = (step) => {\n      switch (step) {\n      case 'Pronouncing':\n        return <PronounceForm patient={this.state.patient}\n                              gotoStep={this.gotoStep}\n                              handleRecordChange={this.handleRecordChange}\n                              record={this.state.record} />;\n      case 'CauseOfDeath':\n        return <CauseOfDeathForm conditions={this.state.conditions}\n                                 selectedConditions={this.state.selectedConditions}\n                                 medications={this.state.medications}\n                                 procedures={this.state.procedures}\n                                 observations={this.state.observations}\n                                 gotoStep={this.gotoStep}\n                                 handleRecordChange={this.handleRecordChange}\n                                 handleConditionClick={this.handleConditionClick}\n                                 record={this.state.record} />;\n      case 'AdditionalQuestions':\n        return <AdditionalQuestionsForm patient={this.state.patient}\n                                        gotoStep={this.gotoStep}\n                                        handleRecordChange={this.handleRecordChange}\n                                        record={this.state.record} />;\n      case 'InjuryQuestions':\n        return <InjuryQuestionsForm patient={this.state.patient}\n                                    gotoStep={this.gotoStep}\n                                    handleRecordChange={this.handleRecordChange}\n                                    record={this.state.record} />;\n      case 'ReviewAndSubmit':\n        return <ReviewAndSubmit patient={this.state.patient}\n                                gotoStep={this.gotoStep}\n                                handleRecordChange={this.handleRecordChange}\n                                record={this.state.record} />;\n      case 'StandalonePatientSearch':\n        return <StandalonePatientSearch setPatient={this.setPatient} setResources={this.setResources} gotoStep={this.gotoStep} />;\n      case 'Welcome':\n      default:\n        return <Welcome setPatient={this.setPatient} setResources={this.setResources} gotoStep={this.gotoStep} />;\n      }\n    };\n\n    return (\n        <div className=\"App\">\n          <Header/>\n          <Grid container>\n            <Grid.Row>\n              <PatientCard patient={this.state.patient} />\n            </Grid.Row>\n            {renderStep(this.state.step)}\n          </Grid>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './IE.js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport _ from 'lodash';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport Loading from './Loading';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { SMARTWrap } from './FHIRClientWrapper';\n\n// See if we're being launched from within a SMART on FHIR context\nswitch (_.last(window.location.pathname.split('/'))) {\ncase 'launch':\n  const scope = 'patient/*.read user/Patient.read openid profile online_access';\n  const clientId = '17eff9ba-9445-426f-a457-b49ee385464e';\n  const launchUri = window.location.protocol + \"//\" + window.location.host + window.location.pathname;\n  const redirectUri = launchUri.replace('launch', 'smart');\n  SMARTWrap.authorize({ client_id: clientId, scope: scope, redirect_uri: redirectUri });\n  ReactDOM.render(<Loading />, document.getElementById('root'));\n  break;\ncase 'smart':\n  ReactDOM.render(<App smart/>, document.getElementById('root'));\n  break;\ncase 'standalone':\n  ReactDOM.render(<App standalone/>, document.getElementById('root'));\n  break;\ndefault:\n  ReactDOM.render(<App />, document.getElementById('root'));\n  break;\n}\nregisterServiceWorker();\n"],"sourceRoot":""}